{
  "version": 3,
  "sources": ["../../../../../src/lib/ui/components/Minimap/DefaultMinimap.tsx"],
  "sourcesContent": ["import {\n\tANIMATION_MEDIUM_MS,\n\tBox,\n\tTLPointerEventInfo,\n\tTLShapeId,\n\tVec,\n\tgetPointerInfo,\n\tintersectPolygonPolygon,\n\tnormalizeWheel,\n\treleasePointerCapture,\n\tsetPointerCapture,\n\tuseComputed,\n\tuseEditor,\n\tuseIsDarkMode,\n\tuseQuickReactor,\n} from '@tldraw/editor'\nimport * as React from 'react'\nimport { MinimapManager } from './MinimapManager'\n\n/** @public */\nexport function DefaultMinimap() {\n\tconst editor = useEditor()\n\n\tconst rCanvas = React.useRef<HTMLCanvasElement>(null!)\n\tconst rPointing = React.useRef(false)\n\n\tconst isDarkMode = useIsDarkMode()\n\tconst devicePixelRatio = useComputed('dpr', () => editor.getInstanceState().devicePixelRatio, [\n\t\teditor,\n\t])\n\tconst presences = React.useMemo(() => editor.store.query.records('instance_presence'), [editor])\n\n\tconst minimap = React.useMemo(() => new MinimapManager(editor), [editor])\n\n\tReact.useEffect(() => {\n\t\t// Must check after render\n\t\tconst raf = requestAnimationFrame(() => {\n\t\t\tminimap.updateColors()\n\t\t\tminimap.render()\n\t\t})\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(raf)\n\t\t}\n\t}, [editor, minimap, isDarkMode])\n\n\tconst onDoubleClick = React.useCallback(\n\t\t(e: React.MouseEvent<HTMLCanvasElement>) => {\n\t\t\tif (!editor.getCurrentPageShapeIds().size) return\n\n\t\t\tconst point = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, false)\n\n\t\t\tconst clampedPoint = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, true)\n\n\t\t\tminimap.originPagePoint.setTo(clampedPoint)\n\t\t\tminimap.originPageCenter.setTo(editor.getViewportPageBounds().center)\n\n\t\t\teditor.centerOnPoint(point, { duration: ANIMATION_MEDIUM_MS })\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst onPointerDown = React.useCallback(\n\t\t(e: React.PointerEvent<HTMLCanvasElement>) => {\n\t\t\tconst elm = e.currentTarget\n\t\t\tsetPointerCapture(elm, e)\n\t\t\tif (!editor.getCurrentPageShapeIds().size) return\n\n\t\t\trPointing.current = true\n\n\t\t\tminimap.isInViewport = false\n\n\t\t\tconst point = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, false)\n\n\t\t\tconst clampedPoint = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, true)\n\n\t\t\tconst _vpPageBounds = editor.getViewportPageBounds()\n\n\t\t\tminimap.isInViewport = _vpPageBounds.containsPoint(clampedPoint)\n\n\t\t\tif (minimap.isInViewport) {\n\t\t\t\tminimap.originPagePoint.setTo(clampedPoint)\n\t\t\t\tminimap.originPageCenter.setTo(_vpPageBounds.center)\n\t\t\t} else {\n\t\t\t\tconst delta = Vec.Sub(_vpPageBounds.center, _vpPageBounds.point)\n\t\t\t\tconst pagePoint = Vec.Add(point, delta)\n\t\t\t\tminimap.originPagePoint.setTo(pagePoint)\n\t\t\t\tminimap.originPageCenter.setTo(point)\n\t\t\t\teditor.centerOnPoint(point, { duration: ANIMATION_MEDIUM_MS })\n\t\t\t}\n\n\t\t\tfunction release(e: PointerEvent) {\n\t\t\t\tif (elm) {\n\t\t\t\t\treleasePointerCapture(elm, e)\n\t\t\t\t}\n\t\t\t\trPointing.current = false\n\t\t\t\tdocument.body.removeEventListener('pointerup', release)\n\t\t\t}\n\n\t\t\tdocument.body.addEventListener('pointerup', release)\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst onPointerMove = React.useCallback(\n\t\t(e: React.PointerEvent<HTMLCanvasElement>) => {\n\t\t\tconst point = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, e.shiftKey, true)\n\n\t\t\tif (rPointing.current) {\n\t\t\t\tif (minimap.isInViewport) {\n\t\t\t\t\tconst delta = minimap.originPagePoint.clone().sub(minimap.originPageCenter)\n\t\t\t\t\teditor.centerOnPoint(Vec.Sub(point, delta))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\teditor.centerOnPoint(point)\n\t\t\t}\n\n\t\t\tconst pagePoint = minimap.getPagePoint(e.clientX, e.clientY)\n\n\t\t\tconst screenPoint = editor.pageToScreen(pagePoint)\n\n\t\t\tconst info: TLPointerEventInfo = {\n\t\t\t\ttype: 'pointer',\n\t\t\t\ttarget: 'canvas',\n\t\t\t\tname: 'pointer_move',\n\t\t\t\t...getPointerInfo(e),\n\t\t\t\tpoint: screenPoint,\n\t\t\t\tisPen: editor.getInstanceState().isPenMode,\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst onWheel = React.useCallback(\n\t\t(e: React.WheelEvent<HTMLCanvasElement>) => {\n\t\t\tconst offset = normalizeWheel(e)\n\n\t\t\teditor.dispatch({\n\t\t\t\ttype: 'wheel',\n\t\t\t\tname: 'wheel',\n\t\t\t\tdelta: offset,\n\t\t\t\tpoint: new Vec(e.clientX, e.clientY),\n\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\taltKey: e.altKey,\n\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t})\n\t\t},\n\t\t[editor]\n\t)\n\n\t// Update the minimap's dpr when the dpr changes\n\tuseQuickReactor(\n\t\t'update when dpr changes',\n\t\t() => {\n\t\t\tconst dpr = devicePixelRatio.get()\n\t\t\tminimap.setDpr(dpr)\n\n\t\t\tconst canvas = rCanvas.current as HTMLCanvasElement\n\t\t\tconst rect = canvas.getBoundingClientRect()\n\t\t\tconst width = rect.width * dpr\n\t\t\tconst height = rect.height * dpr\n\n\t\t\t// These must happen in order\n\t\t\tcanvas.width = width\n\t\t\tcanvas.height = height\n\t\t\tminimap.canvasScreenBounds.set(rect.x, rect.y, width, height)\n\n\t\t\tminimap.cvs = rCanvas.current\n\t\t},\n\t\t[devicePixelRatio, minimap]\n\t)\n\n\tuseQuickReactor(\n\t\t'minimap render when pagebounds or collaborators changes',\n\t\t() => {\n\t\t\tconst shapeIdsOnCurrentPage = editor.getCurrentPageShapeIds()\n\t\t\tconst commonBoundsOfAllShapesOnCurrentPage = editor.getCurrentPageBounds()\n\t\t\tconst viewportPageBounds = editor.getViewportPageBounds()\n\n\t\t\tconst _dpr = devicePixelRatio.get() // dereference\n\n\t\t\tminimap.contentPageBounds = commonBoundsOfAllShapesOnCurrentPage\n\t\t\t\t? Box.Expand(commonBoundsOfAllShapesOnCurrentPage, viewportPageBounds)\n\t\t\t\t: viewportPageBounds\n\n\t\t\tminimap.updateContentScreenBounds()\n\n\t\t\t// All shape bounds\n\n\t\t\tconst allShapeBounds = [] as (Box & { id: TLShapeId })[]\n\n\t\t\tshapeIdsOnCurrentPage.forEach((id) => {\n\t\t\t\tlet pageBounds = editor.getShapePageBounds(id) as Box & { id: TLShapeId }\n\t\t\t\tif (!pageBounds) return\n\n\t\t\t\tconst pageMask = editor.getShapeMask(id)\n\n\t\t\t\tif (pageMask) {\n\t\t\t\t\tconst intersection = intersectPolygonPolygon(pageMask, pageBounds.corners)\n\t\t\t\t\tif (!intersection) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tpageBounds = Box.FromPoints(intersection) as Box & { id: TLShapeId }\n\t\t\t\t}\n\n\t\t\t\tif (pageBounds) {\n\t\t\t\t\tpageBounds.id = id // kinda dirty but we want to include the id here\n\t\t\t\t\tallShapeBounds.push(pageBounds)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tminimap.pageBounds = allShapeBounds\n\t\t\tminimap.collaborators = presences.get()\n\t\t\tminimap.render()\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\treturn (\n\t\t<div className=\"tlui-minimap\">\n\t\t\t<canvas\n\t\t\t\trole=\"img\"\n\t\t\t\taria-label=\"minimap\"\n\t\t\t\tref={rCanvas}\n\t\t\t\tclassName=\"tlui-minimap__canvas\"\n\t\t\t\tonDoubleClick={onDoubleClick}\n\t\t\t\tonPointerMove={onPointerMove}\n\t\t\t\tonPointerDown={onPointerDown}\n\t\t\t\tonWheel={onWheel}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n"],
  "mappings": "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",
  "names": ["e"]
}
