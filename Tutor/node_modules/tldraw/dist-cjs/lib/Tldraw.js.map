{
  "version": 3,
  "sources": ["../../src/lib/Tldraw.tsx"],
  "sourcesContent": ["import {\n\tEditor,\n\tErrorScreen,\n\tExpand,\n\tLoadingScreen,\n\tStoreSnapshot,\n\tTLEditorComponents,\n\tTLOnMountHandler,\n\tTLRecord,\n\tTLStore,\n\tTLStoreWithStatus,\n\tTldrawEditor,\n\tTldrawEditorBaseProps,\n\tassert,\n\tuseEditor,\n\tuseEditorComponents,\n\tuseShallowArrayIdentity,\n\tuseShallowObjectIdentity,\n} from '@tldraw/editor'\nimport { useCallback, useDebugValue, useLayoutEffect, useMemo, useRef } from 'react'\nimport { TldrawHandles } from './canvas/TldrawHandles'\nimport { TldrawHoveredShapeIndicator } from './canvas/TldrawHoveredShapeIndicator'\nimport { TldrawScribble } from './canvas/TldrawScribble'\nimport { TldrawSelectionBackground } from './canvas/TldrawSelectionBackground'\nimport { TldrawSelectionForeground } from './canvas/TldrawSelectionForeground'\nimport {\n\tTLExternalContentProps,\n\tregisterDefaultExternalContentHandlers,\n} from './defaultExternalContentHandlers'\nimport { defaultShapeTools } from './defaultShapeTools'\nimport { defaultShapeUtils } from './defaultShapeUtils'\nimport { registerDefaultSideEffects } from './defaultSideEffects'\nimport { defaultTools } from './defaultTools'\nimport { TldrawUi, TldrawUiProps } from './ui/TldrawUi'\nimport { TLUiComponents, useTldrawUiComponents } from './ui/context/components'\nimport { useToasts } from './ui/context/toasts'\nimport { usePreloadAssets } from './ui/hooks/usePreloadAssets'\nimport { useTranslation } from './ui/hooks/useTranslation/useTranslation'\nimport { useDefaultEditorAssetsWithOverrides } from './utils/static-assets/assetUrls'\n\n/**@public */\nexport type TLComponents = Expand<TLEditorComponents & TLUiComponents>\n\n/** @public */\nexport type TldrawProps = Expand<\n\t// combine components from base editor and ui\n\t(Omit<TldrawUiProps, 'components'> &\n\t\tOmit<TldrawEditorBaseProps, 'components'> & {\n\t\t\tcomponents?: TLComponents\n\t\t}) &\n\t\t// external content\n\t\tPartial<TLExternalContentProps> &\n\t\t// store stuff\n\t\t(| {\n\t\t\t\t\tstore: TLStore | TLStoreWithStatus\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tstore?: undefined\n\t\t\t\t\tpersistenceKey?: string\n\t\t\t\t\tsessionId?: string\n\t\t\t\t\tdefaultName?: string\n\t\t\t\t\t/**\n\t\t\t\t\t * A snapshot to load for the store's initial data / schema.\n\t\t\t\t\t */\n\t\t\t\t\tsnapshot?: StoreSnapshot<TLRecord>\n\t\t\t  }\n\t\t)\n>\n\n/** @public */\nexport function Tldraw(props: TldrawProps) {\n\tconst {\n\t\tchildren,\n\t\tmaxImageDimension,\n\t\tmaxAssetSize,\n\t\tacceptedImageMimeTypes,\n\t\tacceptedVideoMimeTypes,\n\t\tonMount,\n\t\tcomponents = {},\n\t\tshapeUtils = [],\n\t\ttools = [],\n\t\t...rest\n\t} = props\n\n\tconst _components = useShallowObjectIdentity(components)\n\tconst componentsWithDefault = useMemo(\n\t\t() => ({\n\t\t\tScribble: TldrawScribble,\n\t\t\tCollaboratorScribble: TldrawScribble,\n\t\t\tSelectionForeground: TldrawSelectionForeground,\n\t\t\tSelectionBackground: TldrawSelectionBackground,\n\t\t\tHandles: TldrawHandles,\n\t\t\tHoveredShapeIndicator: TldrawHoveredShapeIndicator,\n\t\t\t..._components,\n\t\t}),\n\t\t[_components]\n\t)\n\n\tconst _shapeUtils = useShallowArrayIdentity(shapeUtils)\n\tconst shapeUtilsWithDefaults = useMemo(\n\t\t() => [...defaultShapeUtils, ..._shapeUtils],\n\t\t[_shapeUtils]\n\t)\n\n\tconst _tools = useShallowArrayIdentity(tools)\n\tconst toolsWithDefaults = useMemo(\n\t\t() => [...defaultTools, ...defaultShapeTools, ..._tools],\n\t\t[_tools]\n\t)\n\n\tconst assets = useDefaultEditorAssetsWithOverrides(rest.assetUrls)\n\n\tconst { done: preloadingComplete, error: preloadingError } = usePreloadAssets(assets)\n\n\tif (preloadingError) {\n\t\treturn <ErrorScreen>Could not load assets. Please refresh the page.</ErrorScreen>\n\t}\n\n\tif (!preloadingComplete) {\n\t\treturn <LoadingScreen>Loading assets...</LoadingScreen>\n\t}\n\n\treturn (\n\t\t<TldrawEditor\n\t\t\tinitialState=\"select\"\n\t\t\t{...rest}\n\t\t\tcomponents={componentsWithDefault}\n\t\t\tshapeUtils={shapeUtilsWithDefaults}\n\t\t\ttools={toolsWithDefaults}\n\t\t>\n\t\t\t<TldrawUi {...rest} components={componentsWithDefault}>\n\t\t\t\t<InsideOfEditorAndUiContext\n\t\t\t\t\tmaxImageDimension={maxImageDimension}\n\t\t\t\t\tmaxAssetSize={maxAssetSize}\n\t\t\t\t\tacceptedImageMimeTypes={acceptedImageMimeTypes}\n\t\t\t\t\tacceptedVideoMimeTypes={acceptedVideoMimeTypes}\n\t\t\t\t\tonMount={onMount}\n\t\t\t\t/>\n\t\t\t\t{children}\n\t\t\t</TldrawUi>\n\t\t</TldrawEditor>\n\t)\n}\n\nconst defaultAcceptedImageMimeTypes = Object.freeze([\n\t'image/jpeg',\n\t'image/png',\n\t'image/gif',\n\t'image/svg+xml',\n])\n\nconst defaultAcceptedVideoMimeTypes = Object.freeze(['video/mp4', 'video/quicktime'])\n\n// We put these hooks into a component here so that they can run inside of the context provided by TldrawEditor and TldrawUi.\nfunction InsideOfEditorAndUiContext({\n\tmaxImageDimension = 1000,\n\tmaxAssetSize = 10 * 1024 * 1024, // 10mb\n\tacceptedImageMimeTypes = defaultAcceptedImageMimeTypes,\n\tacceptedVideoMimeTypes = defaultAcceptedVideoMimeTypes,\n\tonMount,\n}: Partial<TLExternalContentProps & { onMount: TLOnMountHandler }>) {\n\tconst editor = useEditor()\n\tconst toasts = useToasts()\n\tconst msg = useTranslation()\n\n\tconst onMountEvent = useEvent((editor: Editor) => {\n\t\tconst unsubs: (void | (() => void) | undefined)[] = []\n\n\t\tunsubs.push(...registerDefaultSideEffects(editor))\n\n\t\t// for content handling, first we register the default handlers...\n\t\tregisterDefaultExternalContentHandlers(\n\t\t\teditor,\n\t\t\t{\n\t\t\t\tmaxImageDimension,\n\t\t\t\tmaxAssetSize,\n\t\t\t\tacceptedImageMimeTypes,\n\t\t\t\tacceptedVideoMimeTypes,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttoasts,\n\t\t\t\tmsg,\n\t\t\t}\n\t\t)\n\n\t\t// ...then we run the onMount prop, which may override the above\n\t\tunsubs.push(onMount?.(editor))\n\n\t\treturn () => {\n\t\t\tunsubs.forEach((fn) => fn?.())\n\t\t}\n\t})\n\n\tuseLayoutEffect(() => {\n\t\tif (editor) return onMountEvent?.(editor)\n\t}, [editor, onMountEvent])\n\n\tconst { Canvas } = useEditorComponents()\n\tconst { ContextMenu } = useTldrawUiComponents()\n\n\tif (ContextMenu) {\n\t\t// should wrap canvas\n\t\treturn <ContextMenu />\n\t}\n\n\tif (Canvas) {\n\t\treturn <Canvas />\n\t}\n\n\treturn null\n}\n\n// duped from tldraw editor\nfunction useEvent<Args extends Array<unknown>, Result>(\n\thandler: (...args: Args) => Result\n): (...args: Args) => Result {\n\tconst handlerRef = useRef<(...args: Args) => Result>()\n\n\tuseLayoutEffect(() => {\n\t\thandlerRef.current = handler\n\t})\n\n\tuseDebugValue(handler)\n\n\treturn useCallback((...args: Args) => {\n\t\tconst fn = handlerRef.current\n\t\tassert(fn, 'fn does not exist')\n\t\treturn fn(...args)\n\t}, [])\n}\n"],
  "mappings": "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",
  "names": ["editor"]
}
