{
  "version": 3,
  "sources": ["../../../../../src/lib/tools/SelectTool/childStates/EditingShape.ts"],
  "sourcesContent": ["import {\n\tGroup2d,\n\tStateNode,\n\tTLArrowShape,\n\tTLEventHandlers,\n\tTLFrameShape,\n\tTLGeoShape,\n} from '@tldraw/editor'\nimport { getHitShapeOnCanvasPointerDown } from '../../selection-logic/getHitShapeOnCanvasPointerDown'\nimport { updateHoveredId } from '../../selection-logic/updateHoveredId'\n\nexport class EditingShape extends StateNode {\n\tstatic override id = 'editing_shape'\n\n\toverride onEnter = () => {\n\t\tconst editingShape = this.editor.getEditingShape()\n\t\tif (!editingShape) throw Error('Entered editing state without an editing shape')\n\t\tupdateHoveredId(this.editor)\n\t\tthis.editor.select(editingShape)\n\t}\n\n\toverride onExit = () => {\n\t\tconst { editingShapeId } = this.editor.getCurrentPageState()\n\t\tif (!editingShapeId) return\n\n\t\t// Clear the editing shape\n\t\tthis.editor.setEditingShape(null)\n\n\t\tconst shape = this.editor.getShape(editingShapeId)!\n\t\tconst util = this.editor.getShapeUtil(shape)\n\n\t\t// Check for changes on editing end\n\t\tutil.onEditEnd?.(shape)\n\t}\n\n\toverride onPointerMove: TLEventHandlers['onPointerMove'] = (info) => {\n\t\tswitch (info.target) {\n\t\t\tcase 'shape':\n\t\t\tcase 'canvas': {\n\t\t\t\tupdateHoveredId(this.editor)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\toverride onPointerDown: TLEventHandlers['onPointerDown'] = (info) => {\n\t\tswitch (info.target) {\n\t\t\tcase 'canvas': {\n\t\t\t\tconst hitShape = getHitShapeOnCanvasPointerDown(this.editor)\n\t\t\t\tif (hitShape) {\n\t\t\t\t\tthis.onPointerDown({\n\t\t\t\t\t\t...info,\n\t\t\t\t\t\tshape: hitShape,\n\t\t\t\t\t\ttarget: 'shape',\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'shape': {\n\t\t\t\tconst { shape } = info\n\t\t\t\tconst editingShape = this.editor.getEditingShape()\n\n\t\t\t\tif (!editingShape) {\n\t\t\t\t\tthrow Error('Expected an editing shape!')\n\t\t\t\t}\n\n\t\t\t\tif (shape.type === editingShape.type) {\n\t\t\t\t\t// clicked a shape of the same type as the editing shape\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.editor.isShapeOfType<TLGeoShape>(shape, 'geo') ||\n\t\t\t\t\t\tthis.editor.isShapeOfType<TLArrowShape>(shape, 'arrow')\n\t\t\t\t\t) {\n\t\t\t\t\t\t// for shapes with labels, check to see if the click was inside of the shape's label\n\t\t\t\t\t\tconst geometry = this.editor.getShapeUtil(shape).getGeometry(shape) as Group2d\n\t\t\t\t\t\tconst labelGeometry = geometry.children[1]\n\t\t\t\t\t\tif (labelGeometry) {\n\t\t\t\t\t\t\tconst pointInShapeSpace = this.editor.getPointInShapeSpace(\n\t\t\t\t\t\t\t\tshape,\n\t\t\t\t\t\t\t\tthis.editor.inputs.currentPagePoint\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tif (labelGeometry.bounds.containsPoint(pointInShapeSpace)) {\n\t\t\t\t\t\t\t\t// it's a hit to the label!\n\t\t\t\t\t\t\t\tif (shape.id === editingShape.id) {\n\t\t\t\t\t\t\t\t\t// If we clicked on the editing geo / arrow shape's label, do nothing\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.parent.transition('pointing_shape', info)\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (shape.id === editingShape.id) {\n\t\t\t\t\t\t\t// If we clicked on a frame, while editing its heading, cancel editing\n\t\t\t\t\t\t\tif (this.editor.isShapeOfType<TLFrameShape>(shape, 'frame')) {\n\t\t\t\t\t\t\t\tthis.editor.setEditingShape(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// If we clicked on the editing shape (which isn't a shape with a label), do nothing\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// But if we clicked on a different shape of the same type, transition to pointing_shape instead\n\t\t\t\t\t\t\tthis.parent.transition('pointing_shape', info)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// clicked a different kind of shape\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\t// still here? Cancel editing and transition back to select idle\n\t\tthis.parent.transition('idle', info)\n\t\t// then feed the pointer down event back into the state chart as if it happened in that state\n\t\tthis.editor.root.handleEvent(info)\n\t}\n\n\toverride onComplete: TLEventHandlers['onComplete'] = (info) => {\n\t\tthis.parent.transition('idle', info)\n\t}\n\n\toverride onCancel: TLEventHandlers['onCancel'] = (info) => {\n\t\tthis.parent.transition('idle', info)\n\t}\n}\n"],
  "mappings": "AAAA;AAAA,EAEC;AAAA,OAKM;AACP,SAAS,sCAAsC;AAC/C,SAAS,uBAAuB;AAEzB,MAAM,qBAAqB,UAAU;AAAA,EAC3C,OAAgB,KAAK;AAAA,EAEZ,UAAU,MAAM;AACxB,UAAM,eAAe,KAAK,OAAO,gBAAgB;AACjD,QAAI,CAAC;AAAc,YAAM,MAAM,gDAAgD;AAC/E,oBAAgB,KAAK,MAAM;AAC3B,SAAK,OAAO,OAAO,YAAY;AAAA,EAChC;AAAA,EAES,SAAS,MAAM;AACvB,UAAM,EAAE,eAAe,IAAI,KAAK,OAAO,oBAAoB;AAC3D,QAAI,CAAC;AAAgB;AAGrB,SAAK,OAAO,gBAAgB,IAAI;AAEhC,UAAM,QAAQ,KAAK,OAAO,SAAS,cAAc;AACjD,UAAM,OAAO,KAAK,OAAO,aAAa,KAAK;AAG3C,SAAK,YAAY,KAAK;AAAA,EACvB;AAAA,EAES,gBAAkD,CAAC,SAAS;AACpE,YAAQ,KAAK,QAAQ;AAAA,MACpB,KAAK;AAAA,MACL,KAAK,UAAU;AACd,wBAAgB,KAAK,MAAM;AAC3B;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACS,gBAAkD,CAAC,SAAS;AACpE,YAAQ,KAAK,QAAQ;AAAA,MACpB,KAAK,UAAU;AACd,cAAM,WAAW,+BAA+B,KAAK,MAAM;AAC3D,YAAI,UAAU;AACb,eAAK,cAAc;AAAA,YAClB,GAAG;AAAA,YACH,OAAO;AAAA,YACP,QAAQ;AAAA,UACT,CAAC;AACD;AAAA,QACD;AACA;AAAA,MACD;AAAA,MACA,KAAK,SAAS;AACb,cAAM,EAAE,MAAM,IAAI;AAClB,cAAM,eAAe,KAAK,OAAO,gBAAgB;AAEjD,YAAI,CAAC,cAAc;AAClB,gBAAM,MAAM,4BAA4B;AAAA,QACzC;AAEA,YAAI,MAAM,SAAS,aAAa,MAAM;AAErC,cACC,KAAK,OAAO,cAA0B,OAAO,KAAK,KAClD,KAAK,OAAO,cAA4B,OAAO,OAAO,GACrD;AAED,kBAAM,WAAW,KAAK,OAAO,aAAa,KAAK,EAAE,YAAY,KAAK;AAClE,kBAAM,gBAAgB,SAAS,SAAS,CAAC;AACzC,gBAAI,eAAe;AAClB,oBAAM,oBAAoB,KAAK,OAAO;AAAA,gBACrC;AAAA,gBACA,KAAK,OAAO,OAAO;AAAA,cACpB;AACA,kBAAI,cAAc,OAAO,cAAc,iBAAiB,GAAG;AAE1D,oBAAI,MAAM,OAAO,aAAa,IAAI;AAEjC;AAAA,gBACD,OAAO;AACN,uBAAK,OAAO,WAAW,kBAAkB,IAAI;AAC7C;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,OAAO;AACN,gBAAI,MAAM,OAAO,aAAa,IAAI;AAEjC,kBAAI,KAAK,OAAO,cAA4B,OAAO,OAAO,GAAG;AAC5D,qBAAK,OAAO,gBAAgB,IAAI;AAAA,cACjC;AAAA,YAED,OAAO;AAEN,mBAAK,OAAO,WAAW,kBAAkB,IAAI;AAC7C;AAAA,YACD;AACA;AAAA,UACD;AAAA,QACD,OAAO;AAAA,QAEP;AACA;AAAA,MACD;AAAA,IACD;AAGA,SAAK,OAAO,WAAW,QAAQ,IAAI;AAEnC,SAAK,OAAO,KAAK,YAAY,IAAI;AAAA,EAClC;AAAA,EAES,aAA4C,CAAC,SAAS;AAC9D,SAAK,OAAO,WAAW,QAAQ,IAAI;AAAA,EACpC;AAAA,EAES,WAAwC,CAAC,SAAS;AAC1D,SAAK,OAAO,WAAW,QAAQ,IAAI;AAAA,EACpC;AACD;",
  "names": []
}
