"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var src_exports = {};
__export(src_exports, {
  ANIMATION_MEDIUM_MS: () => import_constants.ANIMATION_MEDIUM_MS,
  ANIMATION_SHORT_MS: () => import_constants.ANIMATION_SHORT_MS,
  Arc2d: () => import_Arc2d.Arc2d,
  BaseBoxShapeTool: () => import_BaseBoxShapeTool.BaseBoxShapeTool,
  BaseBoxShapeUtil: () => import_BaseBoxShapeUtil.BaseBoxShapeUtil,
  Box: () => import_Box.Box,
  CAMERA_SLIDE_FRICTION: () => import_constants.CAMERA_SLIDE_FRICTION,
  Circle2d: () => import_Circle2d.Circle2d,
  ContainerProvider: () => import_useContainer.ContainerProvider,
  CubicBezier2d: () => import_CubicBezier2d.CubicBezier2d,
  CubicSpline2d: () => import_CubicSpline2d.CubicSpline2d,
  DEFAULT_ANIMATION_OPTIONS: () => import_constants.DEFAULT_ANIMATION_OPTIONS,
  DOUBLE_CLICK_DURATION: () => import_constants.DOUBLE_CLICK_DURATION,
  DRAG_DISTANCE: () => import_constants.DRAG_DISTANCE,
  DefaultBackground: () => import_DefaultBackground.DefaultBackground,
  DefaultBrush: () => import_DefaultBrush.DefaultBrush,
  DefaultCanvas: () => import_DefaultCanvas.DefaultCanvas,
  DefaultCollaboratorHint: () => import_DefaultCollaboratorHint.DefaultCollaboratorHint,
  DefaultCursor: () => import_DefaultCursor.DefaultCursor,
  DefaultErrorFallback: () => import_DefaultErrorFallback.DefaultErrorFallback,
  DefaultGrid: () => import_DefaultGrid.DefaultGrid,
  DefaultHandle: () => import_DefaultHandle.DefaultHandle,
  DefaultHandles: () => import_DefaultHandles.DefaultHandles,
  DefaultHoveredShapeIndicator: () => import_DefaultHoveredShapeIndicator.DefaultHoveredShapeIndicator,
  DefaultScribble: () => import_DefaultScribble.DefaultScribble,
  DefaultSelectionBackground: () => import_DefaultSelectionBackground.DefaultSelectionBackground,
  DefaultSelectionForeground: () => import_DefaultSelectionForeground.DefaultSelectionForeground,
  DefaultShapeIndicator: () => import_DefaultShapeIndicator.DefaultShapeIndicator,
  DefaultSnapIndicator: () => import_DefaultSnapIndictor.DefaultSnapIndicator,
  DefaultSpinner: () => import_DefaultSpinner.DefaultSpinner,
  DefaultSvgDefs: () => import_DefaultSvgDefs.DefaultSvgDefs,
  EASINGS: () => import_easings.EASINGS,
  EMPTY_ARRAY: () => import_state.EMPTY_ARRAY,
  EVENT_NAME_MAP: () => import_event_types.EVENT_NAME_MAP,
  Edge2d: () => import_Edge2d.Edge2d,
  Editor: () => import_Editor.Editor,
  EditorContext: () => import_useEditor.EditorContext,
  Ellipse2d: () => import_Ellipse2d.Ellipse2d,
  ErrorBoundary: () => import_ErrorBoundary.ErrorBoundary,
  ErrorScreen: () => import_TldrawEditor.ErrorScreen,
  GRID_STEPS: () => import_constants.GRID_STEPS,
  Geometry2d: () => import_Geometry2d.Geometry2d,
  Group2d: () => import_Group2d.Group2d,
  GroupShapeUtil: () => import_GroupShapeUtil.GroupShapeUtil,
  HALF_PI: () => import_utils.HALF_PI,
  HASH_PATTERN_ZOOM_NAMES: () => import_constants.HASH_PATTERN_ZOOM_NAMES,
  HIT_TEST_MARGIN: () => import_constants.HIT_TEST_MARGIN,
  HTMLContainer: () => import_HTMLContainer.HTMLContainer,
  LoadingScreen: () => import_TldrawEditor.LoadingScreen,
  MAX_PAGES: () => import_constants.MAX_PAGES,
  MAX_SHAPES_PER_PAGE: () => import_constants.MAX_SHAPES_PER_PAGE,
  MAX_ZOOM: () => import_constants.MAX_ZOOM,
  MIN_ZOOM: () => import_constants.MIN_ZOOM,
  MULTI_CLICK_DURATION: () => import_constants.MULTI_CLICK_DURATION,
  Mat: () => import_Mat.Mat,
  OptionalErrorBoundary: () => import_ErrorBoundary.OptionalErrorBoundary,
  PI: () => import_utils.PI,
  PI2: () => import_utils.PI2,
  Point2d: () => import_Point2d.Point2d,
  Polygon2d: () => import_Polygon2d.Polygon2d,
  Polyline2d: () => import_Polyline2d.Polyline2d,
  ROTATE_CORNER_TO_SELECTION_CORNER: () => import_Box.ROTATE_CORNER_TO_SELECTION_CORNER,
  ReadonlySharedStyleMap: () => import_SharedStylesMap.ReadonlySharedStyleMap,
  Rectangle2d: () => import_Rectangle2d.Rectangle2d,
  SIN: () => import_utils.SIN,
  SVGContainer: () => import_SVGContainer.SVGContainer,
  SVG_PADDING: () => import_constants.SVG_PADDING,
  ShapeUtil: () => import_ShapeUtil.ShapeUtil,
  SharedStyleMap: () => import_SharedStylesMap.SharedStyleMap,
  SnapManager: () => import_SnapManager.SnapManager,
  Stadium2d: () => import_Stadium2d.Stadium2d,
  StateNode: () => import_StateNode.StateNode,
  TAB_ID: () => import_TLSessionStateSnapshot.TAB_ID,
  TldrawEditor: () => import_TldrawEditor.TldrawEditor,
  USER_COLORS: () => import_TLUserPreferences.USER_COLORS,
  Vec: () => import_Vec.Vec,
  WeakMapCache: () => import_WeakMapCache.WeakMapCache,
  ZOOMS: () => import_constants.ZOOMS,
  angleDistance: () => import_utils.angleDistance,
  applyRotationToSnapshotShapes: () => import_rotation.applyRotationToSnapshotShapes,
  approximately: () => import_utils.approximately,
  areAnglesCompatible: () => import_utils.areAnglesCompatible,
  atom: () => import_state.atom,
  average: () => import_utils.average,
  canonicalizeRotation: () => import_utils.canonicalizeRotation,
  clamp: () => import_utils.clamp,
  clampRadians: () => import_utils.clampRadians,
  clockwiseAngleDist: () => import_utils.clockwiseAngleDist,
  computed: () => import_state.computed,
  coreShapes: () => import_defaultShapes.coreShapes,
  counterClockwiseAngleDist: () => import_utils.counterClockwiseAngleDist,
  createSessionStateSnapshotSignal: () => import_TLSessionStateSnapshot.createSessionStateSnapshotSignal,
  createTLStore: () => import_createTLStore.createTLStore,
  createTLUser: () => import_createTLUser.createTLUser,
  dataUrlToFile: () => import_assets.dataUrlToFile,
  debugFlags: () => import_debug_flags.debugFlags,
  defaultUserPreferences: () => import_TLUserPreferences.defaultUserPreferences,
  degreesToRadians: () => import_utils.degreesToRadians,
  extractSessionStateFromLegacySnapshot: () => import_TLSessionStateSnapshot.extractSessionStateFromLegacySnapshot,
  featureFlags: () => import_debug_flags.featureFlags,
  getArcMeasure: () => import_utils.getArcMeasure,
  getArrowTerminalsInArrowSpace: () => import_shared.getArrowTerminalsInArrowSpace,
  getCursor: () => import_useCursor.getCursor,
  getFreshUserPreferences: () => import_TLUserPreferences.getFreshUserPreferences,
  getIncrementedName: () => import_getIncrementedName.getIncrementedName,
  getPointInArcT: () => import_utils.getPointInArcT,
  getPointOnCircle: () => import_utils.getPointOnCircle,
  getPointerInfo: () => import_getPointerInfo.getPointerInfo,
  getPolygonVertices: () => import_utils.getPolygonVertices,
  getRotationSnapshot: () => import_rotation.getRotationSnapshot,
  getSvgPathFromPoints: () => import_getSvgPathFromPoints.getSvgPathFromPoints,
  getUserPreferences: () => import_TLUserPreferences.getUserPreferences,
  hardReset: () => import_hardReset.hardReset,
  hardResetEditor: () => import_hardResetEditor.hardResetEditor,
  intersectCircleCircle: () => import_intersect.intersectCircleCircle,
  intersectCirclePolygon: () => import_intersect.intersectCirclePolygon,
  intersectCirclePolyline: () => import_intersect.intersectCirclePolyline,
  intersectLineSegmentCircle: () => import_intersect.intersectLineSegmentCircle,
  intersectLineSegmentLineSegment: () => import_intersect.intersectLineSegmentLineSegment,
  intersectLineSegmentPolygon: () => import_intersect.intersectLineSegmentPolygon,
  intersectLineSegmentPolyline: () => import_intersect.intersectLineSegmentPolyline,
  intersectPolygonBounds: () => import_intersect.intersectPolygonBounds,
  intersectPolygonPolygon: () => import_intersect.intersectPolygonPolygon,
  isSafeFloat: () => import_utils.isSafeFloat,
  linesIntersect: () => import_intersect.linesIntersect,
  loadSessionStateSnapshotIntoStore: () => import_TLSessionStateSnapshot.loadSessionStateSnapshotIntoStore,
  loopToHtmlElement: () => import_dom.loopToHtmlElement,
  moveCameraWhenCloseToEdge: () => import_edgeScrolling.moveCameraWhenCloseToEdge,
  normalizeWheel: () => import_normalizeWheel.normalizeWheel,
  openWindow: () => import_window_open.openWindow,
  perimeterOfEllipse: () => import_utils.perimeterOfEllipse,
  pointInPolygon: () => import_utils.pointInPolygon,
  polygonsIntersect: () => import_intersect.polygonsIntersect,
  precise: () => import_utils.precise,
  preventDefault: () => import_dom.preventDefault,
  radiansToDegrees: () => import_utils.radiansToDegrees,
  rangeIntersection: () => import_utils.rangeIntersection,
  react: () => import_state.react,
  refreshPage: () => import_refreshPage.refreshPage,
  releasePointerCapture: () => import_dom.releasePointerCapture,
  resizeBox: () => import_resizeBox.resizeBox,
  rotateSelectionHandle: () => import_Box.rotateSelectionHandle,
  runtime: () => import_runtime.runtime,
  setPointerCapture: () => import_dom.setPointerCapture,
  setRuntimeOverrides: () => import_runtime.setRuntimeOverrides,
  setUserPreferences: () => import_TLUserPreferences.setUserPreferences,
  shortAngleDist: () => import_utils.shortAngleDist,
  snapAngle: () => import_utils.snapAngle,
  stopEventPropagation: () => import_dom.stopEventPropagation,
  toDomPrecision: () => import_utils.toDomPrecision,
  toFixed: () => import_utils.toFixed,
  toPrecision: () => import_utils.toPrecision,
  track: () => import_state.track,
  transact: () => import_state.transact,
  transaction: () => import_state.transaction,
  uniq: () => import_uniq.uniq,
  uniqueId: () => import_uniqueId.uniqueId,
  useComputed: () => import_state.useComputed,
  useContainer: () => import_useContainer.useContainer,
  useEditor: () => import_useEditor.useEditor,
  useEditorComponents: () => import_useEditorComponents.useEditorComponents,
  useIsCropping: () => import_useIsCropping.useIsCropping,
  useIsDarkMode: () => import_useIsDarkMode.useIsDarkMode,
  useIsEditing: () => import_useIsEditing.useIsEditing,
  useLocalStore: () => import_useLocalStore.useLocalStore,
  usePeerIds: () => import_usePeerIds.usePeerIds,
  usePresence: () => import_usePresence.usePresence,
  useQuickReactor: () => import_state.useQuickReactor,
  useReactor: () => import_state.useReactor,
  useSelectionEvents: () => import_useSelectionEvents.useSelectionEvents,
  useShallowArrayIdentity: () => import_useIdentity.useShallowArrayIdentity,
  useShallowObjectIdentity: () => import_useIdentity.useShallowObjectIdentity,
  useTLStore: () => import_useTLStore.useTLStore,
  useTransform: () => import_useTransform.useTransform,
  useValue: () => import_state.useValue,
  whyAmIRunning: () => import_state.whyAmIRunning
});
module.exports = __toCommonJS(src_exports);
var import_state = require("@tldraw/state");
__reExport(src_exports, require("@tldraw/store"), module.exports);
__reExport(src_exports, require("@tldraw/tlschema"), module.exports);
__reExport(src_exports, require("@tldraw/utils"), module.exports);
__reExport(src_exports, require("@tldraw/validate"), module.exports);
var import_TldrawEditor = require("./lib/TldrawEditor");
var import_ErrorBoundary = require("./lib/components/ErrorBoundary");
var import_HTMLContainer = require("./lib/components/HTMLContainer");
var import_SVGContainer = require("./lib/components/SVGContainer");
var import_DefaultBackground = require("./lib/components/default-components/DefaultBackground");
var import_DefaultBrush = require("./lib/components/default-components/DefaultBrush");
var import_DefaultCanvas = require("./lib/components/default-components/DefaultCanvas");
var import_DefaultCollaboratorHint = require("./lib/components/default-components/DefaultCollaboratorHint");
var import_DefaultCursor = require("./lib/components/default-components/DefaultCursor");
var import_DefaultErrorFallback = require("./lib/components/default-components/DefaultErrorFallback");
var import_DefaultGrid = require("./lib/components/default-components/DefaultGrid");
var import_DefaultHandle = require("./lib/components/default-components/DefaultHandle");
var import_DefaultHandles = require("./lib/components/default-components/DefaultHandles");
var import_DefaultHoveredShapeIndicator = require("./lib/components/default-components/DefaultHoveredShapeIndicator");
var import_DefaultScribble = require("./lib/components/default-components/DefaultScribble");
var import_DefaultSelectionBackground = require("./lib/components/default-components/DefaultSelectionBackground");
var import_DefaultSelectionForeground = require("./lib/components/default-components/DefaultSelectionForeground");
var import_DefaultShapeIndicator = require("./lib/components/default-components/DefaultShapeIndicator");
var import_DefaultSnapIndictor = require("./lib/components/default-components/DefaultSnapIndictor");
var import_DefaultSpinner = require("./lib/components/default-components/DefaultSpinner");
var import_DefaultSvgDefs = require("./lib/components/default-components/DefaultSvgDefs");
var import_TLSessionStateSnapshot = require("./lib/config/TLSessionStateSnapshot");
var import_TLUserPreferences = require("./lib/config/TLUserPreferences");
var import_createTLStore = require("./lib/config/createTLStore");
var import_createTLUser = require("./lib/config/createTLUser");
var import_defaultShapes = require("./lib/config/defaultShapes");
var import_constants = require("./lib/constants");
var import_Editor = require("./lib/editor/Editor");
var import_SnapManager = require("./lib/editor/managers/SnapManager/SnapManager");
var import_BaseBoxShapeUtil = require("./lib/editor/shapes/BaseBoxShapeUtil");
var import_ShapeUtil = require("./lib/editor/shapes/ShapeUtil");
var import_GroupShapeUtil = require("./lib/editor/shapes/group/GroupShapeUtil");
var import_shared = require("./lib/editor/shapes/shared/arrow/shared");
var import_resizeBox = require("./lib/editor/shapes/shared/resizeBox");
var import_BaseBoxShapeTool = require("./lib/editor/tools/BaseBoxShapeTool/BaseBoxShapeTool");
var import_StateNode = require("./lib/editor/tools/StateNode");
var import_event_types = require("./lib/editor/types/event-types");
var import_useContainer = require("./lib/hooks/useContainer");
var import_useCursor = require("./lib/hooks/useCursor");
var import_useEditor = require("./lib/hooks/useEditor");
var import_useEditorComponents = require("./lib/hooks/useEditorComponents");
var import_useIdentity = require("./lib/hooks/useIdentity");
var import_useIsCropping = require("./lib/hooks/useIsCropping");
var import_useIsDarkMode = require("./lib/hooks/useIsDarkMode");
var import_useIsEditing = require("./lib/hooks/useIsEditing");
var import_useLocalStore = require("./lib/hooks/useLocalStore");
var import_usePeerIds = require("./lib/hooks/usePeerIds");
var import_usePresence = require("./lib/hooks/usePresence");
var import_useSelectionEvents = require("./lib/hooks/useSelectionEvents");
var import_useTLStore = require("./lib/hooks/useTLStore");
var import_useTransform = require("./lib/hooks/useTransform");
var import_Box = require("./lib/primitives/Box");
var import_Mat = require("./lib/primitives/Mat");
var import_Vec = require("./lib/primitives/Vec");
var import_easings = require("./lib/primitives/easings");
var import_Arc2d = require("./lib/primitives/geometry/Arc2d");
var import_Circle2d = require("./lib/primitives/geometry/Circle2d");
var import_CubicBezier2d = require("./lib/primitives/geometry/CubicBezier2d");
var import_CubicSpline2d = require("./lib/primitives/geometry/CubicSpline2d");
var import_Edge2d = require("./lib/primitives/geometry/Edge2d");
var import_Ellipse2d = require("./lib/primitives/geometry/Ellipse2d");
var import_Geometry2d = require("./lib/primitives/geometry/Geometry2d");
var import_Group2d = require("./lib/primitives/geometry/Group2d");
var import_Point2d = require("./lib/primitives/geometry/Point2d");
var import_Polygon2d = require("./lib/primitives/geometry/Polygon2d");
var import_Polyline2d = require("./lib/primitives/geometry/Polyline2d");
var import_Rectangle2d = require("./lib/primitives/geometry/Rectangle2d");
var import_Stadium2d = require("./lib/primitives/geometry/Stadium2d");
var import_intersect = require("./lib/primitives/intersect");
var import_utils = require("./lib/primitives/utils");
var import_SharedStylesMap = require("./lib/utils/SharedStylesMap");
var import_WeakMapCache = require("./lib/utils/WeakMapCache");
var import_assets = require("./lib/utils/assets");
var import_debug_flags = require("./lib/utils/debug-flags");
var import_dom = require("./lib/utils/dom");
var import_edgeScrolling = require("./lib/utils/edgeScrolling");
var import_getIncrementedName = require("./lib/utils/getIncrementedName");
var import_getPointerInfo = require("./lib/utils/getPointerInfo");
var import_getSvgPathFromPoints = require("./lib/utils/getSvgPathFromPoints");
var import_hardResetEditor = require("./lib/utils/hardResetEditor");
var import_normalizeWheel = require("./lib/utils/normalizeWheel");
var import_refreshPage = require("./lib/utils/refreshPage");
var import_rotation = require("./lib/utils/rotation");
var import_runtime = require("./lib/utils/runtime");
var import_hardReset = require("./lib/utils/sync/hardReset");
var import_uniq = require("./lib/utils/uniq");
var import_uniqueId = require("./lib/utils/uniqueId");
var import_window_open = require("./lib/utils/window-open");
var import_at = require("core-js/stable/array/at.js");
var import_flat_map = require("core-js/stable/array/flat-map.js");
var import_flat = require("core-js/stable/array/flat.js");
var import_at2 = require("core-js/stable/string/at.js");
var import_replace_all = require("core-js/stable/string/replace-all.js");
//# sourceMappingURL=index.js.map
