{
  "version": 3,
  "sources": ["../../../src/lib/config/createTLStore.ts"],
  "sourcesContent": ["import { HistoryEntry, SerializedStore, Store, StoreSchema } from '@tldraw/store'\nimport {\n\tSchemaShapeInfo,\n\tTLRecord,\n\tTLStore,\n\tTLStoreProps,\n\tTLUnknownShape,\n\tcreateTLSchema,\n} from '@tldraw/tlschema'\nimport { TLShapeUtilConstructor } from '../editor/shapes/ShapeUtil'\nimport { TLAnyShapeUtilConstructor, checkShapesAndAddCore } from './defaultShapes'\n\n/** @public */\nexport type TLStoreOptions = {\n\tinitialData?: SerializedStore<TLRecord>\n\tdefaultName?: string\n} & (\n\t| { shapeUtils?: readonly TLAnyShapeUtilConstructor[] }\n\t| { schema?: StoreSchema<TLRecord, TLStoreProps> }\n)\n\n/** @public */\nexport type TLStoreEventInfo = HistoryEntry<TLRecord>\n\n/**\n * A helper for creating a TLStore. Custom shapes cannot override default shapes.\n *\n * @param opts - Options for creating the store.\n *\n * @public */\nexport function createTLStore({ initialData, defaultName = '', ...rest }: TLStoreOptions): TLStore {\n\tconst schema =\n\t\t'schema' in rest && rest.schema\n\t\t\t? // we have a schema\n\t\t\t\trest.schema\n\t\t\t: // we need a schema\n\t\t\t\tcreateTLSchema({\n\t\t\t\t\tshapes: currentPageShapesToShapeMap(\n\t\t\t\t\t\tcheckShapesAndAddCore('shapeUtils' in rest && rest.shapeUtils ? rest.shapeUtils : [])\n\t\t\t\t\t),\n\t\t\t\t})\n\n\treturn new Store({\n\t\tschema,\n\t\tinitialData,\n\t\tprops: {\n\t\t\tdefaultName,\n\t\t},\n\t})\n}\n\nfunction currentPageShapesToShapeMap(shapeUtils: TLShapeUtilConstructor<TLUnknownShape>[]) {\n\treturn Object.fromEntries(\n\t\tshapeUtils.map((s): [string, SchemaShapeInfo] => [\n\t\t\ts.type,\n\t\t\t{\n\t\t\t\tprops: s.props,\n\t\t\t\tmigrations: s.migrations,\n\t\t\t},\n\t\t])\n\t)\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkE;AAClE,sBAOO;AAEP,2BAAiE;AAoB1D,SAAS,cAAc,EAAE,aAAa,cAAc,IAAI,GAAG,KAAK,GAA4B;AAClG,QAAM,SACL,YAAY,QAAQ,KAAK;AAAA;AAAA,IAEvB,KAAK;AAAA;AAAA;AAAA,QAEL,gCAAe;AAAA,MACd,QAAQ;AAAA,YACP,4CAAsB,gBAAgB,QAAQ,KAAK,aAAa,KAAK,aAAa,CAAC,CAAC;AAAA,MACrF;AAAA,IACD,CAAC;AAAA;AAEJ,SAAO,IAAI,mBAAM;AAAA,IAChB;AAAA,IACA;AAAA,IACA,OAAO;AAAA,MACN;AAAA,IACD;AAAA,EACD,CAAC;AACF;AAEA,SAAS,4BAA4B,YAAsD;AAC1F,SAAO,OAAO;AAAA,IACb,WAAW,IAAI,CAAC,MAAiC;AAAA,MAChD,EAAE;AAAA,MACF;AAAA,QACC,OAAO,EAAE;AAAA,QACT,YAAY,EAAE;AAAA,MACf;AAAA,IACD,CAAC;AAAA,EACF;AACD;",
  "names": []
}
