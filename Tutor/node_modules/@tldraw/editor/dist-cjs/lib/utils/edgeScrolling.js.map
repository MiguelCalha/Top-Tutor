{
  "version": 3,
  "sources": ["../../../src/lib/utils/edgeScrolling.ts"],
  "sourcesContent": ["import { COARSE_POINTER_WIDTH, EDGE_SCROLL_DISTANCE, EDGE_SCROLL_SPEED } from '../constants'\nimport { Editor } from '../editor/Editor'\n\n/**\n * Helper function to get the scroll proximity factor for a given position.\n * @param position - The mouse position on the axis.\n * @param dimension - The component dimension on the axis.\n * @internal\n */\nfunction getEdgeProximityFactor(\n\tposition: number,\n\tdimension: number,\n\tisCoarse: boolean,\n\tinsetStart: boolean,\n\tinsetEnd: boolean\n) {\n\tconst dist = EDGE_SCROLL_DISTANCE\n\tconst pw = isCoarse ? COARSE_POINTER_WIDTH : 0 // pointer width\n\tconst pMin = position - pw\n\tconst pMax = position + pw\n\tconst min = insetStart ? 0 : dist\n\tconst max = insetEnd ? dimension : dimension - dist\n\tif (pMin < min) {\n\t\treturn Math.min(1, (min - pMin) / dist)\n\t} else if (pMax > max) {\n\t\treturn -Math.min(1, (pMax - max) / dist)\n\t}\n\treturn 0\n}\n\n/**\n * Moves the camera when the mouse is close to the edge of the screen.\n * @public\n */\nexport function moveCameraWhenCloseToEdge(editor: Editor) {\n\tif (\n\t\t!editor.inputs.isDragging ||\n\t\teditor.inputs.isPanning ||\n\t\t!editor.getInstanceState().canMoveCamera\n\t)\n\t\treturn\n\n\tconst {\n\t\tinputs: {\n\t\t\tcurrentScreenPoint: { x, y },\n\t\t},\n\t} = editor\n\tconst zoomLevel = editor.getZoomLevel()\n\tconst screenBounds = editor.getViewportScreenBounds()\n\n\t// Determines how much the speed is affected by the screen size\n\tconst screenSizeFactorX = screenBounds.w < 1000 ? 0.612 : 1\n\tconst screenSizeFactorY = screenBounds.h < 1000 ? 0.612 : 1\n\n\tconst {\n\t\tisCoarsePointer,\n\t\tinsets: [t, r, b, l],\n\t} = editor.getInstanceState()\n\tconst proximityFactorX = getEdgeProximityFactor(x, screenBounds.w, isCoarsePointer, l, r)\n\tconst proximityFactorY = getEdgeProximityFactor(y, screenBounds.h, isCoarsePointer, t, b)\n\n\tif (proximityFactorX === 0 && proximityFactorY === 0) return\n\n\t// Determines the base speed of the scroll\n\tconst pxSpeed = editor.user.getEdgeScrollSpeed() * EDGE_SCROLL_SPEED\n\tconst scrollDeltaX = (pxSpeed * proximityFactorX * screenSizeFactorX) / zoomLevel\n\tconst scrollDeltaY = (pxSpeed * proximityFactorY * screenSizeFactorY) / zoomLevel\n\n\tconst camera = editor.getCamera()\n\n\teditor.setCamera({\n\t\tx: camera.x + scrollDeltaX,\n\t\ty: camera.y + scrollDeltaY,\n\t})\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA8E;AAS9E,SAAS,uBACR,UACA,WACA,UACA,YACA,UACC;AACD,QAAM,OAAO;AACb,QAAM,KAAK,WAAW,wCAAuB;AAC7C,QAAM,OAAO,WAAW;AACxB,QAAM,OAAO,WAAW;AACxB,QAAM,MAAM,aAAa,IAAI;AAC7B,QAAM,MAAM,WAAW,YAAY,YAAY;AAC/C,MAAI,OAAO,KAAK;AACf,WAAO,KAAK,IAAI,IAAI,MAAM,QAAQ,IAAI;AAAA,EACvC,WAAW,OAAO,KAAK;AACtB,WAAO,CAAC,KAAK,IAAI,IAAI,OAAO,OAAO,IAAI;AAAA,EACxC;AACA,SAAO;AACR;AAMO,SAAS,0BAA0B,QAAgB;AACzD,MACC,CAAC,OAAO,OAAO,cACf,OAAO,OAAO,aACd,CAAC,OAAO,iBAAiB,EAAE;AAE3B;AAED,QAAM;AAAA,IACL,QAAQ;AAAA,MACP,oBAAoB,EAAE,GAAG,EAAE;AAAA,IAC5B;AAAA,EACD,IAAI;AACJ,QAAM,YAAY,OAAO,aAAa;AACtC,QAAM,eAAe,OAAO,wBAAwB;AAGpD,QAAM,oBAAoB,aAAa,IAAI,MAAO,QAAQ;AAC1D,QAAM,oBAAoB,aAAa,IAAI,MAAO,QAAQ;AAE1D,QAAM;AAAA,IACL;AAAA,IACA,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,EACpB,IAAI,OAAO,iBAAiB;AAC5B,QAAM,mBAAmB,uBAAuB,GAAG,aAAa,GAAG,iBAAiB,GAAG,CAAC;AACxF,QAAM,mBAAmB,uBAAuB,GAAG,aAAa,GAAG,iBAAiB,GAAG,CAAC;AAExF,MAAI,qBAAqB,KAAK,qBAAqB;AAAG;AAGtD,QAAM,UAAU,OAAO,KAAK,mBAAmB,IAAI;AACnD,QAAM,eAAgB,UAAU,mBAAmB,oBAAqB;AACxE,QAAM,eAAgB,UAAU,mBAAmB,oBAAqB;AAExE,QAAM,SAAS,OAAO,UAAU;AAEhC,SAAO,UAAU;AAAA,IAChB,GAAG,OAAO,IAAI;AAAA,IACd,GAAG,OAAO,IAAI;AAAA,EACf,CAAC;AACF;",
  "names": []
}
