{
  "version": 3,
  "sources": ["../../../../src/lib/components/default-components/DefaultCanvas.tsx"],
  "sourcesContent": ["import { react, track, useQuickReactor, useValue } from '@tldraw/state'\nimport { TLHandle, TLShapeId } from '@tldraw/tlschema'\nimport { dedupe, modulate, objectMapValues } from '@tldraw/utils'\nimport classNames from 'classnames'\nimport React from 'react'\nimport { COARSE_HANDLE_RADIUS, HANDLE_RADIUS } from '../../constants'\nimport { useCanvasEvents } from '../../hooks/useCanvasEvents'\nimport { useCoarsePointer } from '../../hooks/useCoarsePointer'\nimport { useDocumentEvents } from '../../hooks/useDocumentEvents'\nimport { useEditor } from '../../hooks/useEditor'\nimport { useEditorComponents } from '../../hooks/useEditorComponents'\nimport { useFixSafariDoubleTapZoomPencilEvents } from '../../hooks/useFixSafariDoubleTapZoomPencilEvents'\nimport { useGestureEvents } from '../../hooks/useGestureEvents'\nimport { useHandleEvents } from '../../hooks/useHandleEvents'\nimport { useScreenBounds } from '../../hooks/useScreenBounds'\nimport { Mat } from '../../primitives/Mat'\nimport { Vec } from '../../primitives/Vec'\nimport { toDomPrecision } from '../../primitives/utils'\nimport { debugFlags } from '../../utils/debug-flags'\nimport { GeometryDebuggingView } from '../GeometryDebuggingView'\nimport { LiveCollaborators } from '../LiveCollaborators'\nimport { Shape } from '../Shape'\n\n/** @public */\nexport type TLCanvasComponentProps = { className?: string }\n\n/** @public */\nexport function DefaultCanvas({ className }: TLCanvasComponentProps) {\n\tconst editor = useEditor()\n\n\tconst { Background, SvgDefs } = useEditorComponents()\n\n\tconst rCanvas = React.useRef<HTMLDivElement>(null)\n\tconst rHtmlLayer = React.useRef<HTMLDivElement>(null)\n\tconst rHtmlLayer2 = React.useRef<HTMLDivElement>(null)\n\n\tuseScreenBounds(rCanvas)\n\tuseDocumentEvents()\n\tuseCoarsePointer()\n\n\tuseGestureEvents(rCanvas)\n\tuseFixSafariDoubleTapZoomPencilEvents(rCanvas)\n\n\tuseQuickReactor(\n\t\t'position layers',\n\t\t() => {\n\t\t\tconst htmlElm = rHtmlLayer.current\n\t\t\tif (!htmlElm) return\n\t\t\tconst htmlElm2 = rHtmlLayer2.current\n\t\t\tif (!htmlElm2) return\n\n\t\t\tconst { x, y, z } = editor.getCamera()\n\n\t\t\t// Because the html container has a width/height of 1px, we\n\t\t\t// need to create a small offset when zoomed to ensure that\n\t\t\t// the html container and svg container are lined up exactly.\n\t\t\tconst offset =\n\t\t\t\tz >= 1 ? modulate(z, [1, 8], [0.125, 0.5], true) : modulate(z, [0.1, 1], [-2, 0.125], true)\n\n\t\t\tconst transform = `scale(${toDomPrecision(z)}) translate(${toDomPrecision(\n\t\t\t\tx + offset\n\t\t\t)}px,${toDomPrecision(y + offset)}px)`\n\t\t\thtmlElm.style.setProperty('transform', transform)\n\t\t\thtmlElm2.style.setProperty('transform', transform)\n\t\t},\n\t\t[editor]\n\t)\n\n\tconst events = useCanvasEvents()\n\n\tconst shapeSvgDefs = useValue(\n\t\t'shapeSvgDefs',\n\t\t() => {\n\t\t\tconst shapeSvgDefsByKey = new Map<string, React.JSX.Element>()\n\t\t\tfor (const util of objectMapValues(editor.shapeUtils)) {\n\t\t\t\tif (!util) return\n\t\t\t\tconst defs = util.getCanvasSvgDefs()\n\t\t\t\tfor (const { key, component: Component } of defs) {\n\t\t\t\t\tif (shapeSvgDefsByKey.has(key)) continue\n\t\t\t\t\tshapeSvgDefsByKey.set(key, <Component key={key} />)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [...shapeSvgDefsByKey.values()]\n\t\t},\n\t\t[editor]\n\t)\n\n\tconst hideShapes = useValue('debug_shapes', () => debugFlags.hideShapes.get(), [debugFlags])\n\tconst debugSvg = useValue('debug_svg', () => debugFlags.debugSvg.get(), [debugFlags])\n\tconst debugGeometry = useValue('debug_geometry', () => debugFlags.debugGeometry.get(), [\n\t\tdebugFlags,\n\t])\n\n\treturn (\n\t\t<div\n\t\t\tref={rCanvas}\n\t\t\tdraggable={false}\n\t\t\tclassName={classNames('tl-canvas', className)}\n\t\t\tdata-testid=\"canvas\"\n\t\t\t{...events}\n\t\t>\n\t\t\t<svg className=\"tl-svg-context\">\n\t\t\t\t<defs>\n\t\t\t\t\t{shapeSvgDefs}\n\t\t\t\t\t{Cursor && <Cursor />}\n\t\t\t\t\t<CollaboratorHint />\n\t\t\t\t\t<ArrowheadDot />\n\t\t\t\t\t<ArrowheadCross />\n\t\t\t\t\t{SvgDefs && <SvgDefs />}\n\t\t\t\t</defs>\n\t\t\t</svg>\n\t\t\t{Background && <Background />}\n\t\t\t<GridWrapper />\n\n\t\t\t<div ref={rHtmlLayer} className=\"tl-html-layer tl-shapes\" draggable={false}>\n\t\t\t\t<OnTheCanvasWrapper />\n\t\t\t\t<SelectionBackgroundWrapper />\n\t\t\t\t{hideShapes ? null : debugSvg ? <ShapesWithSVGs /> : <ShapesToDisplay />}\n\t\t\t</div>\n\t\t\t<div className=\"tl-overlays\">\n\t\t\t\t<div ref={rHtmlLayer2} className=\"tl-html-layer\">\n\t\t\t\t\t{debugGeometry ? <GeometryDebuggingView /> : null}\n\t\t\t\t\t<HandlesWrapper />\n\t\t\t\t\t<BrushWrapper />\n\t\t\t\t\t<ScribbleWrapper />\n\t\t\t\t\t<ZoomBrushWrapper />\n\t\t\t\t\t<SelectedIdIndicators />\n\t\t\t\t\t<HoveredShapeIndicator />\n\t\t\t\t\t<HintedShapeIndicator />\n\t\t\t\t\t<SnapIndicatorWrapper />\n\t\t\t\t\t<SelectionForegroundWrapper />\n\t\t\t\t\t<LiveCollaborators />\n\t\t\t\t</div>\n\t\t\t\t<InFrontOfTheCanvasWrapper />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction GridWrapper() {\n\tconst editor = useEditor()\n\tconst gridSize = useValue('gridSize', () => editor.getDocumentSettings().gridSize, [editor])\n\tconst { x, y, z } = useValue('camera', () => editor.getCamera(), [editor])\n\tconst isGridMode = useValue('isGridMode', () => editor.getInstanceState().isGridMode, [editor])\n\tconst { Grid } = useEditorComponents()\n\n\tif (!(Grid && isGridMode)) return null\n\n\treturn <Grid x={x} y={y} z={z} size={gridSize} />\n}\n\nfunction ScribbleWrapper() {\n\tconst editor = useEditor()\n\tconst scribbles = useValue('scribbles', () => editor.getInstanceState().scribbles, [editor])\n\tconst zoomLevel = useValue('zoomLevel', () => editor.getZoomLevel(), [editor])\n\tconst { Scribble } = useEditorComponents()\n\n\tif (!(Scribble && scribbles.length)) return null\n\n\treturn (\n\t\t<>\n\t\t\t{scribbles.map((scribble) => (\n\t\t\t\t<Scribble\n\t\t\t\t\tkey={scribble.id}\n\t\t\t\t\tclassName=\"tl-user-scribble\"\n\t\t\t\t\tscribble={scribble}\n\t\t\t\t\tzoom={zoomLevel}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nfunction BrushWrapper() {\n\tconst editor = useEditor()\n\tconst brush = useValue('brush', () => editor.getInstanceState().brush, [editor])\n\tconst { Brush } = useEditorComponents()\n\n\tif (!(Brush && brush)) return null\n\n\treturn <Brush className=\"tl-user-brush\" brush={brush} />\n}\n\nfunction ZoomBrushWrapper() {\n\tconst editor = useEditor()\n\tconst zoomBrush = useValue('zoomBrush', () => editor.getInstanceState().zoomBrush, [editor])\n\tconst { ZoomBrush } = useEditorComponents()\n\n\tif (!(ZoomBrush && zoomBrush)) return null\n\n\treturn <ZoomBrush className=\"tl-user-brush tl-zoom-brush\" brush={zoomBrush} />\n}\n\nfunction SnapIndicatorWrapper() {\n\tconst editor = useEditor()\n\tconst lines = useValue('snapLines', () => editor.snaps.getIndicators(), [editor])\n\tconst zoomLevel = useValue('zoomLevel', () => editor.getZoomLevel(), [editor])\n\tconst { SnapIndicator } = useEditorComponents()\n\n\tif (!(SnapIndicator && lines.length > 0)) return null\n\n\treturn (\n\t\t<>\n\t\t\t{lines.map((line) => (\n\t\t\t\t<SnapIndicator key={line.id} className=\"tl-user-snapline\" line={line} zoom={zoomLevel} />\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nfunction HandlesWrapper() {\n\tconst editor = useEditor()\n\tconst { Handles } = useEditorComponents()\n\n\tconst zoomLevel = useValue('zoomLevel', () => editor.getZoomLevel(), [editor])\n\n\tconst isCoarse = useValue('coarse pointer', () => editor.getInstanceState().isCoarsePointer, [\n\t\teditor,\n\t])\n\n\tconst isReadonly = useValue('isChangingStyle', () => editor.getInstanceState().isReadonly, [\n\t\teditor,\n\t])\n\n\tconst isChangingStyle = useValue(\n\t\t'isChangingStyle',\n\t\t() => editor.getInstanceState().isChangingStyle,\n\t\t[editor]\n\t)\n\n\tconst onlySelectedShape = useValue('onlySelectedShape', () => editor.getOnlySelectedShape(), [\n\t\teditor,\n\t])\n\n\tconst transform = useValue(\n\t\t'transform',\n\t\t() => {\n\t\t\tif (!onlySelectedShape) return null\n\n\t\t\treturn editor.getShapePageTransform(onlySelectedShape)\n\t\t},\n\t\t[editor, onlySelectedShape]\n\t)\n\n\tconst handles = useValue(\n\t\t'handles',\n\t\t() => {\n\t\t\tif (!onlySelectedShape) return null\n\n\t\t\tconst handles = editor.getShapeHandles(onlySelectedShape)\n\t\t\tif (!handles) return null\n\n\t\t\tconst minDistBetweenVirtualHandlesAndRegularHandles =\n\t\t\t\t((isCoarse ? COARSE_HANDLE_RADIUS : HANDLE_RADIUS) / zoomLevel) * 2\n\n\t\t\treturn (\n\t\t\t\thandles\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(handle) =>\n\t\t\t\t\t\t\t// if the handle isn't a virtual handle, we'll display it\n\t\t\t\t\t\t\thandle.type !== 'virtual' ||\n\t\t\t\t\t\t\t// but for virtual handles, we'll only display them if they're far enough away from vertex handles\n\t\t\t\t\t\t\t!handles.some(\n\t\t\t\t\t\t\t\t(h) =>\n\t\t\t\t\t\t\t\t\t// skip the handle we're checking against\n\t\t\t\t\t\t\t\t\th !== handle &&\n\t\t\t\t\t\t\t\t\t// only check against vertex handles\n\t\t\t\t\t\t\t\t\th.type === 'vertex' &&\n\t\t\t\t\t\t\t\t\t// and check that their distance isn't below the minimum distance\n\t\t\t\t\t\t\t\t\tVec.Dist(handle, h) < minDistBetweenVirtualHandlesAndRegularHandles\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t// We want vertex handles in front of all other handles\n\t\t\t\t\t.sort((a) => (a.type === 'vertex' ? 1 : -1))\n\t\t\t)\n\t\t},\n\t\t[editor, onlySelectedShape, zoomLevel, isCoarse]\n\t)\n\n\tif (!Handles || !onlySelectedShape || isChangingStyle || isReadonly || !handles || !transform) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<Handles>\n\t\t\t<g transform={Mat.toCssString(transform)}>\n\t\t\t\t{handles.map((handle) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<HandleWrapper\n\t\t\t\t\t\t\tkey={handle.id}\n\t\t\t\t\t\t\tshapeId={onlySelectedShape.id}\n\t\t\t\t\t\t\thandle={handle}\n\t\t\t\t\t\t\tzoom={zoomLevel}\n\t\t\t\t\t\t\tisCoarse={isCoarse}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</g>\n\t\t</Handles>\n\t)\n}\n\nfunction HandleWrapper({\n\tshapeId,\n\thandle,\n\tzoom,\n\tisCoarse,\n}: {\n\tshapeId: TLShapeId\n\thandle: TLHandle\n\tzoom: number\n\tisCoarse: boolean\n}) {\n\tconst events = useHandleEvents(shapeId, handle.id)\n\tconst { Handle } = useEditorComponents()\n\n\tif (!Handle) return null\n\n\treturn (\n\t\t<g aria-label=\"handle\" transform={`translate(${handle.x}, ${handle.y})`} {...events}>\n\t\t\t<Handle shapeId={shapeId} handle={handle} zoom={zoom} isCoarse={isCoarse} />\n\t\t</g>\n\t)\n}\n\nfunction ShapesWithSVGs() {\n\tconst editor = useEditor()\n\n\tconst renderingShapes = useValue('rendering shapes', () => editor.getRenderingShapes(), [editor])\n\n\treturn (\n\t\t<>\n\t\t\t{renderingShapes.map((result) => (\n\t\t\t\t<React.Fragment key={result.id + '_fragment'}>\n\t\t\t\t\t<Shape {...result} />\n\t\t\t\t\t<DebugSvgCopy id={result.id} />\n\t\t\t\t</React.Fragment>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nfunction ShapesToDisplay() {\n\tconst editor = useEditor()\n\n\tconst renderingShapes = useValue('rendering shapes', () => editor.getRenderingShapes(), [editor])\n\n\treturn (\n\t\t<>\n\t\t\t{renderingShapes.map((result) => (\n\t\t\t\t<Shape key={result.id + '_shape'} {...result} />\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nfunction SelectedIdIndicators() {\n\tconst editor = useEditor()\n\tconst selectedShapeIds = useValue('selectedShapeIds', () => editor.getSelectedShapeIds(), [\n\t\teditor,\n\t])\n\tconst shouldDisplay = useValue(\n\t\t'should display selected ids',\n\t\t() => {\n\t\t\t// todo: move to tldraw selected ids wrapper\n\t\t\treturn (\n\t\t\t\teditor.isInAny(\n\t\t\t\t\t'select.idle',\n\t\t\t\t\t'select.brushing',\n\t\t\t\t\t'select.scribble_brushing',\n\t\t\t\t\t'select.editing_shape',\n\t\t\t\t\t'select.pointing_shape',\n\t\t\t\t\t'select.pointing_selection',\n\t\t\t\t\t'select.pointing_handle'\n\t\t\t\t) && !editor.getInstanceState().isChangingStyle\n\t\t\t)\n\t\t},\n\t\t[editor]\n\t)\n\n\tconst { ShapeIndicator } = useEditorComponents()\n\n\tif (!ShapeIndicator) return null\n\tif (!shouldDisplay) return null\n\n\treturn (\n\t\t<>\n\t\t\t{selectedShapeIds.map((id) => (\n\t\t\t\t<ShapeIndicator\n\t\t\t\t\tkey={id + '_indicator'}\n\t\t\t\t\tclassName=\"tl-user-indicator__selected\"\n\t\t\t\t\tshapeId={id}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nconst HoveredShapeIndicator = function HoveredShapeIndicator() {\n\tconst editor = useEditor()\n\tconst { HoveredShapeIndicator } = useEditorComponents()\n\tconst isCoarsePointer = useValue(\n\t\t'coarse pointer',\n\t\t() => editor.getInstanceState().isCoarsePointer,\n\t\t[editor]\n\t)\n\tconst isHoveringCanvas = useValue(\n\t\t'hovering canvas',\n\t\t() => editor.getInstanceState().isHoveringCanvas,\n\t\t[editor]\n\t)\n\tconst hoveredShapeId = useValue('hovered id', () => editor.getCurrentPageState().hoveredShapeId, [\n\t\teditor,\n\t])\n\n\tif (isCoarsePointer || !isHoveringCanvas || !hoveredShapeId || !HoveredShapeIndicator) return null\n\n\treturn <HoveredShapeIndicator shapeId={hoveredShapeId} />\n}\n\nconst HintedShapeIndicator = track(function HintedShapeIndicator() {\n\tconst editor = useEditor()\n\tconst { ShapeIndicator } = useEditorComponents()\n\n\tconst ids = dedupe(editor.getHintingShapeIds())\n\n\tif (!ids.length) return null\n\tif (!ShapeIndicator) return null\n\n\treturn (\n\t\t<>\n\t\t\t{ids.map((id) => (\n\t\t\t\t<ShapeIndicator className=\"tl-user-indicator__hint\" shapeId={id} key={id + '_hinting'} />\n\t\t\t))}\n\t\t</>\n\t)\n})\n\nfunction Cursor() {\n\treturn (\n\t\t<g id=\"cursor\">\n\t\t\t<g fill=\"rgba(0,0,0,.2)\" transform=\"translate(-11,-11)\">\n\t\t\t\t<path d=\"m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z\" />\n\t\t\t\t<path d=\"m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z\" />\n\t\t\t</g>\n\t\t\t<g fill=\"white\" transform=\"translate(-12,-12)\">\n\t\t\t\t<path d=\"m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z\" />\n\t\t\t\t<path d=\"m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z\" />\n\t\t\t</g>\n\t\t\t<g fill=\"currentColor\" transform=\"translate(-12,-12)\">\n\t\t\t\t<path d=\"m19.751 24.4155-1.844.774-3.1-7.374 1.841-.775z\" />\n\t\t\t\t<path d=\"m13 10.814v11.188l2.969-2.866.428-.139h4.768z\" />\n\t\t\t</g>\n\t\t</g>\n\t)\n}\n\nfunction CollaboratorHint() {\n\treturn <path id=\"cursor_hint\" fill=\"currentColor\" d=\"M -2,-5 2,0 -2,5 Z\" />\n}\n\nfunction ArrowheadDot() {\n\treturn (\n\t\t<marker id=\"arrowhead-dot\" className=\"tl-arrow-hint\" refX=\"3.0\" refY=\"3.0\" orient=\"0\">\n\t\t\t<circle cx=\"3\" cy=\"3\" r=\"2\" strokeDasharray=\"100%\" />\n\t\t</marker>\n\t)\n}\n\nfunction ArrowheadCross() {\n\treturn (\n\t\t<marker id=\"arrowhead-cross\" className=\"tl-arrow-hint\" refX=\"3.0\" refY=\"3.0\" orient=\"auto\">\n\t\t\t<line x1=\"1.5\" y1=\"1.5\" x2=\"4.5\" y2=\"4.5\" strokeDasharray=\"100%\" />\n\t\t\t<line x1=\"1.5\" y1=\"4.5\" x2=\"4.5\" y2=\"1.5\" strokeDasharray=\"100%\" />\n\t\t</marker>\n\t)\n}\n\nconst DebugSvgCopy = track(function DupSvg({ id }: { id: TLShapeId }) {\n\tconst editor = useEditor()\n\tconst shape = editor.getShape(id)\n\n\tconst [html, setHtml] = React.useState('')\n\n\tconst isInRoot = shape?.parentId === editor.getCurrentPageId()\n\n\tReact.useEffect(() => {\n\t\tif (!isInRoot) return\n\n\t\tlet latest = null\n\t\tconst unsubscribe = react('shape to svg', async () => {\n\t\t\tconst renderId = Math.random()\n\t\t\tlatest = renderId\n\t\t\tconst bb = editor.getShapePageBounds(id)\n\t\t\tconst el = await editor.getSvg([id], {\n\t\t\t\tpadding: 0,\n\t\t\t\tbackground: editor.getInstanceState().exportBackground,\n\t\t\t})\n\t\t\tif (el && bb && latest === renderId) {\n\t\t\t\tel.style.setProperty('overflow', 'visible')\n\t\t\t\tel.setAttribute('preserveAspectRatio', 'xMidYMin slice')\n\t\t\t\tel.style.setProperty('transform', `translate(${bb.x}px, ${bb.y + bb.h + 12}px)`)\n\t\t\t\tel.style.setProperty('border', '1px solid black')\n\t\t\t\tsetHtml(el?.outerHTML)\n\t\t\t}\n\t\t})\n\n\t\treturn () => {\n\t\t\tlatest = null\n\t\t\tunsubscribe()\n\t\t}\n\t}, [editor, id, isInRoot])\n\n\tif (!isInRoot) return null\n\n\treturn (\n\t\t<div style={{ paddingTop: 12, position: 'absolute' }}>\n\t\t\t<div style={{ display: 'flex' }} dangerouslySetInnerHTML={{ __html: html }} />\n\t\t</div>\n\t)\n})\n\nfunction SelectionForegroundWrapper() {\n\tconst editor = useEditor()\n\tconst selectionRotation = useValue('selection rotation', () => editor.getSelectionRotation(), [\n\t\teditor,\n\t])\n\tconst selectionBounds = useValue(\n\t\t'selection bounds',\n\t\t() => editor.getSelectionRotatedPageBounds(),\n\t\t[editor]\n\t)\n\tconst { SelectionForeground } = useEditorComponents()\n\tif (!selectionBounds || !SelectionForeground) return null\n\treturn <SelectionForeground bounds={selectionBounds} rotation={selectionRotation} />\n}\n\nfunction SelectionBackgroundWrapper() {\n\tconst editor = useEditor()\n\tconst selectionRotation = useValue('selection rotation', () => editor.getSelectionRotation(), [\n\t\teditor,\n\t])\n\tconst selectionBounds = useValue(\n\t\t'selection bounds',\n\t\t() => editor.getSelectionRotatedPageBounds(),\n\t\t[editor]\n\t)\n\tconst { SelectionBackground } = useEditorComponents()\n\tif (!selectionBounds || !SelectionBackground) return null\n\treturn <SelectionBackground bounds={selectionBounds} rotation={selectionRotation} />\n}\n\nfunction OnTheCanvasWrapper() {\n\tconst { OnTheCanvas } = useEditorComponents()\n\tif (!OnTheCanvas) return null\n\treturn <OnTheCanvas />\n}\n\nfunction InFrontOfTheCanvasWrapper() {\n\tconst { InFrontOfTheCanvas } = useEditorComponents()\n\tif (!InFrontOfTheCanvas) return null\n\treturn <InFrontOfTheCanvas />\n}\n"],
  "mappings": "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",
  "names": ["import_utils", "React", "classNames", "handles", "HoveredShapeIndicator", "HintedShapeIndicator"]
}
