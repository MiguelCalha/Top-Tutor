{
  "version": 3,
  "sources": ["../../../../src/lib/editor/managers/ClickManager.ts"],
  "sourcesContent": ["import {\n\tCOARSE_DRAG_DISTANCE,\n\tDOUBLE_CLICK_DURATION,\n\tDRAG_DISTANCE,\n\tMULTI_CLICK_DURATION,\n} from '../../constants'\nimport { Vec } from '../../primitives/Vec'\nimport { uniqueId } from '../../utils/uniqueId'\nimport type { Editor } from '../Editor'\nimport { TLClickEventInfo, TLPointerEventInfo } from '../types/event-types'\n\ntype TLClickState =\n\t| 'idle'\n\t| 'pendingDouble'\n\t| 'pendingTriple'\n\t| 'pendingQuadruple'\n\t| 'pendingOverflow'\n\t| 'overflow'\n\nconst MAX_CLICK_DISTANCE = 40\n\nexport class ClickManager {\n\tconstructor(public editor: Editor) {}\n\n\tprivate _clickId = ''\n\n\tprivate _clickTimeout?: any\n\n\tprivate _clickScreenPoint?: Vec\n\n\tprivate _previousScreenPoint?: Vec\n\n\tprivate _getClickTimeout = (state: TLClickState, id = uniqueId()) => {\n\t\tthis._clickId = id\n\t\tclearTimeout(this._clickTimeout)\n\t\tthis._clickTimeout = setTimeout(\n\t\t\t() => {\n\t\t\t\tif (this._clickState === state && this._clickId === id) {\n\t\t\t\t\tswitch (this._clickState) {\n\t\t\t\t\t\tcase 'pendingTriple': {\n\t\t\t\t\t\t\tthis.editor.dispatch({\n\t\t\t\t\t\t\t\t...this.lastPointerInfo,\n\t\t\t\t\t\t\t\ttype: 'click',\n\t\t\t\t\t\t\t\tname: 'double_click',\n\t\t\t\t\t\t\t\tphase: 'settle',\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'pendingQuadruple': {\n\t\t\t\t\t\t\tthis.editor.dispatch({\n\t\t\t\t\t\t\t\t...this.lastPointerInfo,\n\t\t\t\t\t\t\t\ttype: 'click',\n\t\t\t\t\t\t\t\tname: 'triple_click',\n\t\t\t\t\t\t\t\tphase: 'settle',\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'pendingOverflow': {\n\t\t\t\t\t\t\tthis.editor.dispatch({\n\t\t\t\t\t\t\t\t...this.lastPointerInfo,\n\t\t\t\t\t\t\t\ttype: 'click',\n\t\t\t\t\t\t\t\tname: 'quadruple_click',\n\t\t\t\t\t\t\t\tphase: 'settle',\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t// noop\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._clickState = 'idle'\n\t\t\t\t}\n\t\t\t},\n\t\t\tstate === 'idle' || state === 'pendingDouble' ? DOUBLE_CLICK_DURATION : MULTI_CLICK_DURATION\n\t\t)\n\t}\n\n\t/**\n\t * The current click state.\n\t *\n\t * @internal\n\t */\n\tprivate _clickState?: TLClickState = 'idle'\n\n\t/**\n\t * The current click state.\n\t *\n\t * @public\n\t */\n\t// eslint-disable-next-line no-restricted-syntax\n\tget clickState() {\n\t\treturn this._clickState\n\t}\n\n\tlastPointerInfo = {} as TLPointerEventInfo\n\n\t/**\n\t * Start the double click timeout.\n\t *\n\t * @param info - The event info.\n\t */\n\ttransformPointerDownEvent = (info: TLPointerEventInfo): TLPointerEventInfo | TLClickEventInfo => {\n\t\tif (!this._clickState) return info\n\n\t\tthis._clickScreenPoint = Vec.From(info.point)\n\n\t\tif (\n\t\t\tthis._previousScreenPoint &&\n\t\t\tthis._previousScreenPoint.dist(this._clickScreenPoint) > MAX_CLICK_DISTANCE\n\t\t) {\n\t\t\tthis._clickState = 'idle'\n\t\t}\n\n\t\tthis._previousScreenPoint = this._clickScreenPoint\n\n\t\tthis.lastPointerInfo = info\n\n\t\tswitch (this._clickState) {\n\t\t\tcase 'idle': {\n\t\t\t\tthis._clickState = 'pendingDouble'\n\t\t\t\tthis._clickTimeout = this._getClickTimeout(this._clickState)\n\t\t\t\treturn info // returns the pointer event\n\t\t\t}\n\t\t\tcase 'pendingDouble': {\n\t\t\t\tthis._clickState = 'pendingTriple'\n\t\t\t\tthis._clickTimeout = this._getClickTimeout(this._clickState)\n\t\t\t\treturn {\n\t\t\t\t\t...info,\n\t\t\t\t\ttype: 'click',\n\t\t\t\t\tname: 'double_click',\n\t\t\t\t\tphase: 'down',\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase 'pendingTriple': {\n\t\t\t\tthis._clickState = 'pendingQuadruple'\n\t\t\t\tthis._clickTimeout = this._getClickTimeout(this._clickState)\n\t\t\t\treturn {\n\t\t\t\t\t...info,\n\t\t\t\t\ttype: 'click',\n\t\t\t\t\tname: 'triple_click',\n\t\t\t\t\tphase: 'down',\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase 'pendingQuadruple': {\n\t\t\t\tthis._clickState = 'pendingOverflow'\n\t\t\t\tthis._clickTimeout = this._getClickTimeout(this._clickState)\n\t\t\t\treturn {\n\t\t\t\t\t...info,\n\t\t\t\t\ttype: 'click',\n\t\t\t\t\tname: 'quadruple_click',\n\t\t\t\t\tphase: 'down',\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase 'pendingOverflow': {\n\t\t\t\tthis._clickState = 'overflow'\n\t\t\t\tthis._clickTimeout = this._getClickTimeout(this._clickState)\n\t\t\t\treturn info\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// overflow\n\t\t\t\tthis._clickTimeout = this._getClickTimeout(this._clickState)\n\t\t\t\treturn info\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Emit click_up events on pointer up.\n\t *\n\t * @param info - The event info.\n\t */\n\ttransformPointerUpEvent = (info: TLPointerEventInfo): TLPointerEventInfo | TLClickEventInfo => {\n\t\tif (!this._clickState) return info\n\n\t\tthis._clickScreenPoint = Vec.From(info.point)\n\n\t\tswitch (this._clickState) {\n\t\t\tcase 'pendingTriple': {\n\t\t\t\treturn {\n\t\t\t\t\t...this.lastPointerInfo,\n\t\t\t\t\ttype: 'click',\n\t\t\t\t\tname: 'double_click',\n\t\t\t\t\tphase: 'up',\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase 'pendingQuadruple': {\n\t\t\t\treturn {\n\t\t\t\t\t...this.lastPointerInfo,\n\t\t\t\t\ttype: 'click',\n\t\t\t\t\tname: 'triple_click',\n\t\t\t\t\tphase: 'up',\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase 'pendingOverflow': {\n\t\t\t\treturn {\n\t\t\t\t\t...this.lastPointerInfo,\n\t\t\t\t\ttype: 'click',\n\t\t\t\t\tname: 'quadruple_click',\n\t\t\t\t\tphase: 'up',\n\t\t\t\t}\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// idle, pendingDouble, overflow\n\t\t\t\treturn info\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Cancel the double click timeout.\n\t *\n\t * @internal\n\t */\n\tcancelDoubleClickTimeout = () => {\n\t\tthis._clickTimeout = clearTimeout(this._clickTimeout)\n\t\tthis._clickState = 'idle'\n\t}\n\n\t/**\n\t * Handle a move event, possibly cancelling the click timeout.\n\t *\n\t * @internal\n\t */\n\thandleMove = () => {\n\t\t// Cancel a double click event if the user has started dragging.\n\t\tif (\n\t\t\tthis._clickState !== 'idle' &&\n\t\t\tthis._clickScreenPoint &&\n\t\t\tthis._clickScreenPoint.dist(this.editor.inputs.currentScreenPoint) >\n\t\t\t\t(this.editor.getInstanceState().isCoarsePointer ? COARSE_DRAG_DISTANCE : DRAG_DISTANCE)\n\t\t) {\n\t\t\tthis.cancelDoubleClickTimeout()\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
