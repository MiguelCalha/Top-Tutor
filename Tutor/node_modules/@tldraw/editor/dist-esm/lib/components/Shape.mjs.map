{
  "version": 3,
  "sources": ["../../../src/lib/components/Shape.tsx"],
  "sourcesContent": ["import { track, useQuickReactor, useStateTracking } from '@tldraw/state'\nimport { TLShape, TLShapeId } from '@tldraw/tlschema'\nimport * as React from 'react'\nimport { ShapeUtil } from '../editor/shapes/ShapeUtil'\nimport { useEditor } from '../hooks/useEditor'\nimport { useEditorComponents } from '../hooks/useEditorComponents'\nimport { Mat } from '../primitives/Mat'\nimport { toDomPrecision } from '../primitives/utils'\nimport { nearestMultiple } from '../utils/nearestMultiple'\nimport { OptionalErrorBoundary } from './ErrorBoundary'\n\n/*\nThis component renders shapes on the canvas. There are two stages: positioning\nand styling the shape's container using CSS, and then rendering the shape's \nJSX using its shape util's render method. Rendering the \"inside\" of a shape is\nmore expensive than positioning it or changing its color, so we use React.memo\nto wrap the inner shape and only re-render it when the shape's props change. \n\nThe shape also receives props for its index and opacity. The index is used to\ndetermine the z-index of the shape, and the opacity is used to set the shape's\nopacity based on its own opacity and that of its parent's.\n*/\nexport const Shape = track(function Shape({\n\tid,\n\tshape,\n\tutil,\n\tindex,\n\tbackgroundIndex,\n\topacity,\n\tisCulled,\n}: {\n\tid: TLShapeId\n\tshape: TLShape\n\tutil: ShapeUtil\n\tindex: number\n\tbackgroundIndex: number\n\topacity: number\n\tisCulled: boolean\n}) {\n\tconst editor = useEditor()\n\n\tconst { ShapeErrorFallback } = useEditorComponents()\n\n\tconst containerRef = React.useRef<HTMLDivElement>(null)\n\tconst backgroundContainerRef = React.useRef<HTMLDivElement>(null)\n\n\tconst setProperty = React.useCallback((property: string, value: string) => {\n\t\tcontainerRef.current?.style.setProperty(property, value)\n\t\tbackgroundContainerRef.current?.style.setProperty(property, value)\n\t}, [])\n\n\tuseQuickReactor(\n\t\t'set shape container transform position',\n\t\t() => {\n\t\t\tconst shape = editor.getShape(id)\n\t\t\tif (!shape) return // probably the shape was just deleted\n\n\t\t\tconst pageTransform = editor.getShapePageTransform(id)\n\t\t\tconst transform = Mat.toCssString(pageTransform)\n\t\t\tsetProperty('transform', transform)\n\t\t},\n\t\t[editor, setProperty]\n\t)\n\n\tuseQuickReactor(\n\t\t'set shape container clip path',\n\t\t() => {\n\t\t\tconst shape = editor.getShape(id)\n\t\t\tif (!shape) return null\n\n\t\t\tconst clipPath = editor.getShapeClipPath(id)\n\t\t\tsetProperty('clip-path', clipPath ?? 'none')\n\t\t},\n\t\t[editor, setProperty]\n\t)\n\n\tuseQuickReactor(\n\t\t'set shape height and width',\n\t\t() => {\n\t\t\tconst shape = editor.getShape(id)\n\t\t\tif (!shape) return null\n\n\t\t\tconst bounds = editor.getShapeGeometry(shape).bounds\n\t\t\tconst dpr = Math.floor(editor.getInstanceState().devicePixelRatio * 100) / 100\n\t\t\t// dprMultiple is the smallest number we can multiply dpr by to get an integer\n\t\t\t// it's usually 1, 2, or 4 (for e.g. dpr of 2, 2.5 and 2.25 respectively)\n\t\t\tconst dprMultiple = nearestMultiple(dpr)\n\t\t\t// We round the shape width and height up to the nearest multiple of dprMultiple to avoid the browser\n\t\t\t// making miscalculations when applying the transform.\n\t\t\tconst widthRemainder = bounds.w % dprMultiple\n\t\t\tconst width = widthRemainder === 0 ? bounds.w : bounds.w + (dprMultiple - widthRemainder)\n\t\t\tconst heightRemainder = bounds.h % dprMultiple\n\t\t\tconst height = heightRemainder === 0 ? bounds.h : bounds.h + (dprMultiple - heightRemainder)\n\t\t\tsetProperty('width', Math.max(width, dprMultiple) + 'px')\n\t\t\tsetProperty('height', Math.max(height, dprMultiple) + 'px')\n\t\t},\n\t\t[editor]\n\t)\n\n\t// Set the opacity of the container when the opacity changes\n\tReact.useLayoutEffect(() => {\n\t\tsetProperty('opacity', opacity + '')\n\t\tcontainerRef.current?.style.setProperty('z-index', index + '')\n\t\tbackgroundContainerRef.current?.style.setProperty('z-index', backgroundIndex + '')\n\t}, [opacity, index, backgroundIndex, setProperty])\n\n\tconst annotateError = React.useCallback(\n\t\t(error: any) => {\n\t\t\teditor.annotateError(error, { origin: 'react.shape', willCrashApp: false })\n\t\t},\n\t\t[editor]\n\t)\n\n\tif (!shape) return null\n\n\treturn (\n\t\t<>\n\t\t\t{util.backgroundComponent && (\n\t\t\t\t<div\n\t\t\t\t\tref={backgroundContainerRef}\n\t\t\t\t\tclassName=\"tl-shape tl-shape-background\"\n\t\t\t\t\tdata-shape-type={shape.type}\n\t\t\t\t\tdraggable={false}\n\t\t\t\t>\n\t\t\t\t\t{!isCulled && (\n\t\t\t\t\t\t<OptionalErrorBoundary fallback={ShapeErrorFallback} onError={annotateError}>\n\t\t\t\t\t\t\t<InnerShapeBackground shape={shape} util={util} />\n\t\t\t\t\t\t</OptionalErrorBoundary>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div ref={containerRef} className=\"tl-shape\" data-shape-type={shape.type} draggable={false}>\n\t\t\t\t{isCulled ? (\n\t\t\t\t\t<CulledShape shape={shape} />\n\t\t\t\t) : (\n\t\t\t\t\t<OptionalErrorBoundary fallback={ShapeErrorFallback as any} onError={annotateError}>\n\t\t\t\t\t\t<InnerShape shape={shape} util={util} />\n\t\t\t\t\t</OptionalErrorBoundary>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n})\n\nconst InnerShape = React.memo(\n\tfunction InnerShape<T extends TLShape>({ shape, util }: { shape: T; util: ShapeUtil<T> }) {\n\t\treturn useStateTracking('InnerShape:' + shape.type, () => util.component(shape))\n\t},\n\t(prev, next) =>\n\t\tprev.shape.props === next.shape.props &&\n\t\tprev.shape.meta === next.shape.meta &&\n\t\tprev.util === next.util\n)\n\nconst InnerShapeBackground = React.memo(\n\tfunction InnerShapeBackground<T extends TLShape>({\n\t\tshape,\n\t\tutil,\n\t}: {\n\t\tshape: T\n\t\tutil: ShapeUtil<T>\n\t}) {\n\t\treturn useStateTracking('InnerShape:' + shape.type, () => util.backgroundComponent?.(shape))\n\t},\n\t(prev, next) => prev.shape.props === next.shape.props && prev.shape.meta === next.shape.meta\n)\n\nconst CulledShape = React.memo(\n\tfunction CulledShape<T extends TLShape>({ shape }: { shape: T }) {\n\t\tconst editor = useEditor()\n\t\tconst bounds = editor.getShapeGeometry(shape).bounds\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"tl-shape__culled\"\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform: `translate(${toDomPrecision(bounds.minX)}px, ${toDomPrecision(\n\t\t\t\t\t\tbounds.minY\n\t\t\t\t\t)}px)`,\n\t\t\t\t\twidth: Math.max(1, toDomPrecision(bounds.width)),\n\t\t\t\t\theight: Math.max(1, toDomPrecision(bounds.height)),\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t},\n\t() => true\n)\n"],
  "mappings": "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",
  "names": ["Shape", "shape", "InnerShape", "InnerShapeBackground", "CulledShape"]
}
