"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var warnings_exports = {};
__export(warnings_exports, {
  logComputedGetterWarning: () => logComputedGetterWarning,
  logDotValueWarning: () => logDotValueWarning
});
module.exports = __toCommonJS(warnings_exports);
let didWarnDotValue = false;
function logDotValueWarning() {
  if (didWarnDotValue)
    return;
  didWarnDotValue = true;
  console.warn(
    "Using Signal.value is deprecated and will be removed in the near future. Please use Signal.get() instead."
  );
}
let didWarnComputedGetter = false;
function logComputedGetterWarning() {
  if (didWarnComputedGetter)
    return;
  didWarnComputedGetter = true;
  console.warn(
    `Using \`@computed\` as a decorator for getters is deprecated and will be removed in the near future. Please refactor to use \`@computed\` as a decorator for methods.

// Before
@computed
get foo() {
	return 'foo'
}

// After
@computed
getFoo() {
	return 'foo'
}
`
  );
}
//# sourceMappingURL=warnings.js.map
