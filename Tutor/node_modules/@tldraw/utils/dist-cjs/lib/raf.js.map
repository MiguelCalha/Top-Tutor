{
  "version": 3,
  "sources": ["../../src/lib/raf.ts"],
  "sourcesContent": ["const isTest = () =>\n\ttypeof process !== 'undefined' &&\n\tprocess.env.NODE_ENV === 'test' &&\n\t// @ts-expect-error\n\t!globalThis.__FORCE_RAF_IN_TESTS__\n\nconst rafQueue: Array<() => void> = []\n\nconst tick = () => {\n\tconst queue = rafQueue.splice(0, rafQueue.length)\n\tfor (const fn of queue) {\n\t\tfn()\n\t}\n}\n\nlet frame: number | undefined\n\nfunction raf() {\n\tif (frame) {\n\t\treturn\n\t}\n\n\tframe = requestAnimationFrame(() => {\n\t\tframe = undefined\n\t\ttick()\n\t})\n}\n\n/**\n * Returns a throttled version of the function that will only be called max once per frame.\n * @param fn - the fun to return a throttled version of\n * @returns\n * @internal\n */\nexport function rafThrottle(fn: () => void) {\n\tif (isTest()) {\n\t\treturn fn\n\t}\n\n\treturn () => {\n\t\tif (rafQueue.includes(fn)) {\n\t\t\treturn\n\t\t}\n\t\trafQueue.push(fn)\n\t\traf()\n\t}\n}\n\n/**\n * Calls the function on the next frame.\n * If the same fn is passed again before the next frame, it will still be called only once.\n * @param fn - the fun to call on the next animation frame\n * @returns\n * @internal\n */\nexport function throttledRaf(fn: () => void) {\n\tif (isTest()) {\n\t\treturn fn()\n\t}\n\n\tif (rafQueue.includes(fn)) {\n\t\treturn\n\t}\n\n\trafQueue.push(fn)\n\traf()\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,SAAS,MACd,OAAO,YAAY,eACnB,QAAQ,IAAI,aAAa;AAEzB,CAAC,WAAW;AAEb,MAAM,WAA8B,CAAC;AAErC,MAAM,OAAO,MAAM;AAClB,QAAM,QAAQ,SAAS,OAAO,GAAG,SAAS,MAAM;AAChD,aAAW,MAAM,OAAO;AACvB,OAAG;AAAA,EACJ;AACD;AAEA,IAAI;AAEJ,SAAS,MAAM;AACd,MAAI,OAAO;AACV;AAAA,EACD;AAEA,UAAQ,sBAAsB,MAAM;AACnC,YAAQ;AACR,SAAK;AAAA,EACN,CAAC;AACF;AAQO,SAAS,YAAY,IAAgB;AAC3C,MAAI,OAAO,GAAG;AACb,WAAO;AAAA,EACR;AAEA,SAAO,MAAM;AACZ,QAAI,SAAS,SAAS,EAAE,GAAG;AAC1B;AAAA,IACD;AACA,aAAS,KAAK,EAAE;AAChB,QAAI;AAAA,EACL;AACD;AASO,SAAS,aAAa,IAAgB;AAC5C,MAAI,OAAO,GAAG;AACb,WAAO,GAAG;AAAA,EACX;AAEA,MAAI,SAAS,SAAS,EAAE,GAAG;AAC1B;AAAA,EACD;AAEA,WAAS,KAAK,EAAE;AAChB,MAAI;AACL;",
  "names": []
}
