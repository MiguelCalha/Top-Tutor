{
  "version": 3,
  "sources": ["../../src/assets/TLBookmarkAsset.ts"],
  "sourcesContent": ["import { defineMigrations } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { createAssetValidator, TLBaseAsset } from './TLBaseAsset'\n\n/**\n * An asset used for URL bookmarks, used by the TLBookmarkShape.\n *\n *  @public */\nexport type TLBookmarkAsset = TLBaseAsset<\n\t'bookmark',\n\t{\n\t\ttitle: string\n\t\tdescription: string\n\t\timage: string\n\t\tsrc: string | null\n\t}\n>\n\n/** @internal */\nexport const bookmarkAssetValidator: T.Validator<TLBookmarkAsset> = createAssetValidator(\n\t'bookmark',\n\tT.object({\n\t\ttitle: T.string,\n\t\tdescription: T.string,\n\t\timage: T.string,\n\t\tsrc: T.srcUrl.nullable(),\n\t})\n)\n\nconst Versions = {\n\tMakeUrlsValid: 1,\n} as const\n\n/** @internal */\nexport const bookmarkAssetMigrations = defineMigrations({\n\tcurrentVersion: Versions.MakeUrlsValid,\n\tmigrators: {\n\t\t[Versions.MakeUrlsValid]: {\n\t\t\tup: (asset) => {\n\t\t\t\tconst src = asset.props.src\n\t\t\t\tif (src && !T.srcUrl.isValid(src)) {\n\t\t\t\t\treturn { ...asset, props: { ...asset.props, src: '' } }\n\t\t\t\t}\n\t\t\t\treturn asset\n\t\t\t},\n\t\t\tdown: (asset) => asset,\n\t\t},\n\t},\n})\n"],
  "mappings": "AAAA,SAAS,wBAAwB;AACjC,SAAS,SAAS;AAClB,SAAS,4BAAyC;AAiB3C,MAAM,yBAAuD;AAAA,EACnE;AAAA,EACA,EAAE,OAAO;AAAA,IACR,OAAO,EAAE;AAAA,IACT,aAAa,EAAE;AAAA,IACf,OAAO,EAAE;AAAA,IACT,KAAK,EAAE,OAAO,SAAS;AAAA,EACxB,CAAC;AACF;AAEA,MAAM,WAAW;AAAA,EAChB,eAAe;AAChB;AAGO,MAAM,0BAA0B,iBAAiB;AAAA,EACvD,gBAAgB,SAAS;AAAA,EACzB,WAAW;AAAA,IACV,CAAC,SAAS,aAAa,GAAG;AAAA,MACzB,IAAI,CAAC,UAAU;AACd,cAAM,MAAM,MAAM,MAAM;AACxB,YAAI,OAAO,CAAC,EAAE,OAAO,QAAQ,GAAG,GAAG;AAClC,iBAAO,EAAE,GAAG,OAAO,OAAO,EAAE,GAAG,MAAM,OAAO,KAAK,GAAG,EAAE;AAAA,QACvD;AACA,eAAO;AAAA,MACR;AAAA,MACA,MAAM,CAAC,UAAU;AAAA,IAClB;AAAA,EACD;AACD,CAAC;",
  "names": []
}
