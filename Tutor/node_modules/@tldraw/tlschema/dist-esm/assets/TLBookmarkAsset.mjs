import { defineMigrations } from "@tldraw/store";
import { T } from "@tldraw/validate";
import { createAssetValidator } from "./TLBaseAsset.mjs";
const bookmarkAssetValidator = createAssetValidator(
  "bookmark",
  T.object({
    title: T.string,
    description: T.string,
    image: T.string,
    src: T.srcUrl.nullable()
  })
);
const Versions = {
  MakeUrlsValid: 1
};
const bookmarkAssetMigrations = defineMigrations({
  currentVersion: Versions.MakeUrlsValid,
  migrators: {
    [Versions.MakeUrlsValid]: {
      up: (asset) => {
        const src = asset.props.src;
        if (src && !T.srcUrl.isValid(src)) {
          return { ...asset, props: { ...asset.props, src: "" } };
        }
        return asset;
      },
      down: (asset) => asset
    }
  }
});
export {
  bookmarkAssetMigrations,
  bookmarkAssetValidator
};
//# sourceMappingURL=TLBookmarkAsset.mjs.map
